console.log(`

‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë
‚ïö‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïù‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë
‚ñë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë
‚ñë‚ñë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ñà‚ïë
‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïù
`);
const { VK } = require('vk-io');
const vk = new VK();
const user = new VK();
user.setOptions({
token: '8969eac85cbbf92bcc3937d3b788f267c1139ed9a4d5a362a0994fe827187f3e33ea685706ba218456696' // user token
});

vk.setOptions({ 
token: '8969eac85cbbf92bcc3937d3b788f267c1139ed9a4d5a362a0994fe827187f3e33ea685706ba218456696', // group token
pollingGroupId: 198301847});
const { updates, snippets } = vk;

const badcode = [];
const request = require('prequest');
const rq = require("prequest");
const fs = require("fs");


const promo = require('./promo.json');
let users = require('./users.json');
let buttons = [];

setInterval(async () => {
	await saveUsers();
}, 3000);

async function saveUsers()
{
	require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
	return true;
}

updates.startPolling();
updates.on('message', async (message) => {
	if(Number(message.senderId) <= 0) return;
	if(/\[club179740381\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[club179740381\|(.*)\]/ig, '').trim();

	if(!users.find(x=> x.id === message.senderId))
	{
		const [user_info] = await user.api.users.get({ user_id: message.senderId, fields: "photo_id, verified, sex, bdate, city, country, home_town, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, domain, has_mobile, contacts, site, education, universities, schools, status, last_seen, followers_count, occupation, nickname, relatives, relation, personal, connections, exports, activities, interests, music, movies, tv, books, games, about, quotes, can_post, can_see_all_posts, can_see_audio, can_write_private_message, can_send_friend_request, is_favorite, is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo, is_friend, friend_status, career, military, blacklisted, blacklisted_by_me"});
		const date = new Date();

		users.push({
			tag: user_info.first_name,
			domain: user_info.domain,
			id: message.senderId,
			uid: users.length,
			adm: 0,
			regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()} | ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`,
			balance: 5000,
			bank: 0,
			btc: 0,		
			business: 0,	
			biz: 0,
			bizlvl: 0,		
			energy: 10,
			zhelezo: 0,
			zoloto: 0,
			almaz: 0,
			uran: 0,							
			mention: true,
			ban: false,	
			banreport: false,
			report: false,
			work: 0,
			stag: 0,						
			opit: 0,
			warn: 0,
			wreason: `–ù–µ—Ç`,			
			floder: 0,
			foolder: 0,	
			home: 0,
			car: 0,
			bicycle: 0,
			airplane: 0,
			pet: 0,
			plvl: 0,
			petpoxod: 0,			
			pk: 0,
			sotik: 0,
			operator: 1,
			number: 0,
			numon: false,			
			timers: {
				hasWorked: false,				
				bonus: false,
				report: false,
			}
		});

		message.send(` 
&#8195;&#8195; [–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞] 
&#8195;&#8195;&#8195; –ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞: [oscrn|Djozeff] 
&#8195;&#8195;&#8195;&#8195;–ö–∞–Ω–∞–ª: –¢–∏–ø–∏—á–Ω—ã–π –∫–æ–¥–µ—Ä. 

‚û• –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, –Ω–∞–ø–∏—à–∏—Ç–µ "–ü–æ–º–æ—â—å"`,
		{
			keyboard:JSON.stringify(
		{
			"one_time": true,
			"buttons": [
			[{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"1\"}",
				"label": "‚ùì –ü–æ–º–æ—â—å"
			},
			"color": "default"
			}]
		]
			})
		});	
}
	message.user = users.find(x=> x.id === message.senderId);
	if(message.user.ban) return message.send(`üö´ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –∑–∞–±–∞–Ω–µ–Ω—ã.`);

	const bot = (text, params) => {
		return message.send(`${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : `${message.user.tag}`}, ${text}`, params);
	}

	if (message.text) {
		message.user.floder += 1;
	}

	const command = badcode.find(x=> x[0].test(message.text));
	if(!command) return;

	if(message.user.warn >= 3)
	{
		message.user.ban = true;
		vk.api.messages.send({ user_id: message.user.id, message: `‚ùó –í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–Ω–æ–≤ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.\nüö´ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –∑–∞–±–∞–Ω–µ–Ω—ã –≤ –±–æ—Ç–µ.` });
	}

	message.args = message.text.match(command[0]);
	await command[1](message, bot);

	console.log(`[${new Date().getHours()}:${new Date().getMinutes()}:${new Date().getSeconds()}]: ${message.text}`)
});

const oscrn = 	(a, b) =>  { 
 {
		badcode.push([a, b]);
	}
}

oscrn(/^‚ùì –ø–æ–º–æ—â—å|–ø–æ–º–æ—â—å$/i, async (message, bot) => { 
	message.user.foolder += 1;
	await message.send(`
‚ùì –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
‚†Ä‚†Äüìò –ü—Ä–æ—Ñ–∏–ª—å
‚†Ä‚†Äüí≤ –ë–∞–ª–∞–Ω—Å
‚†Ä‚†Äüí∞ –ë–∞–Ω–∫ [—Å—É–º–º–∞/—Å–Ω—è—Ç—å —Å—É–º–º–∞]
‚†Ä‚†Äüìû –ù–∏–∫ [–ü—Ä–æ–∑–≤–∏—â–µ]
‚†Ä‚†Äüó∫ –ú–∞–≥–∞–∑–∏–Ω‚†Ä‚†Ä
‚†Ä‚†ÄüéØ –ü—Ä–æ–¥–∞—Ç—å [–ü—Ä–µ–¥–º–µ—Ç]
‚†Ä‚†Äüêí –ü–∏—Ç–æ–º–µ—Ü - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
‚†Ä‚†Äüåü –ü–∏—Ç–æ–º–µ—Ü —É–ª—É—á—à–∏—Ç—å 
‚†Ä‚†Äüê™ –ü–∏—Ç–æ–º–µ—Ü –ø–æ—Ö–æ–¥ 
‚†Ä‚†Äüôà –ü–∏—Ç–æ–º–µ—Ü –Ω–∞–π—Ç–∏	

üöÄ –ò–≥—Ä–æ–≤—ã–µ:
‚†Ä‚†ÄüÉè –ü–æ–∫–µ—Ä [—Å–∏–Ω–∏–π/–∑–µ–ª–µ–Ω—ã–π/—á–µ—Ä–Ω—ã–π] [—Å—Ç–∞–≤–∫–∞]
‚†Ä‚†Äüé≤ –ö—É–±–∏–∫ [—á–∏—Å–ª–æ 1-6]
‚†Ä‚†Äüé∞ –ö–∞–∑–∏–Ω–æ [—Å—É–º–º–∞]
‚†Ä‚†Äüìà –¢—Ä–µ–π–¥ [–≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑] [—Å—É–º–º–∞]
‚†Ä‚†Äü•õ –°—Ç–∞–∫–∞–Ω—á–∏–∫ [1-3] [—Å—É–º–º–∞]
‚†Ä‚†Äüëí –ö–≤–µ—Å—Ç—ã	‚†Ä‚†Ä
‚†Ä‚†ÄüçÇ –ö–æ–ø–∞—Ç—å
‚†Ä‚†Ä‚úà –õ–µ—Ç—á–∏–∫
‚†Ä‚†Äüöò –¢–∞–∫—Å–æ–≤–∞—Ç—å
‚†Ä‚†Äüôä –ê–Ω–µ–∫–¥–æ—Ç
‚†Ä‚†Ä‚è≥ –®–∞—Ä [—Ñ—Ä–∞–∑–∞]
‚†Ä‚†Äüí¨ –í—ã–±–µ—Ä–∏ [—Ñ—Ä–∞–∑–∞] –∏–ª–∏ [—Ñ—Ä–∞–∑–∞2]
‚†Ä‚†Äüìä –ò–Ω—Ñ–∞ [—Ñ—Ä–∞–∑–∞]
‚†Ä‚†Äüíé –ë–æ–Ω—É—Å
	
üçÄ –†–∞–∑–Ω–æ–µ:
‚†Ä‚†Äüìà –ë–∏–∑–Ω–µ—Å - –≤–∞—à –±–∏–∑–Ω–µ—Å
‚†Ä‚†Äüíµ –ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å - —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∏–∑–Ω–µ—Å–∞
‚†Ä‚†Äüëî –†–∞–±–æ—Ç–∞ - —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç
‚†Ä‚†Äüî® –†–∞–±–æ—Ç–∞—Ç—å - –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥
‚†Ä‚†Ä‚ùå –£–≤–æ–ª–∏—Ç—å—Å—è - –ø–µ—Ä–µ—Å—Ç–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å

üÜò –†–µ–ø–æ—Ä—Ç [—Ç–µ–∫—Å—Ç]`);
});	

oscrn(/^(?:–∞–Ω–µ–∫–¥–æ—Ç)$/i, async (message, bot) => {

	let textanek = utils.pick(['–†–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–∞—é—Ç –¥–≤–∞ –∞–º–µ—Ä–∏–∫–∞–Ω—Ü–∞:\n ‚Äî –£ —ç—Ç–∏—Ö —Ä—É—Å—Å–∫–∏—Ö –Ω–µ —Ç–æ–ª—å–∫–æ –¥—É—à–∞ –¥—Ä—É–≥–∞—è. –û–Ω–∏ –∏ —É—Å—Ç—Ä–æ–µ–Ω—ã –ø–æ-–¥—Ä—É–≥–æ–º—É.\n ‚Äî ?\n ‚Äî –Ø —Å–∞–º —Å–ª—ã—à–∞–ª –∫–∞–∫ –æ–¥–∏–Ω —Å–∫–∞–∑–∞–ª –¥—Ä—É–≥–æ–º—É ‚Äî –û–¥–µ–Ω—å —Ç—ã –Ω–∞ —Ö@–π —à–∞–ø–∫—É, –∞ —Ç–æ —É—à–∏ –∑–∞–º–µ—Ä–∑–Ω—É—Ç.', '–ë—ã–≤–∞–µ—Ç, –±–æ—Ä–µ—à—å—Å—è –∑–∞ —á—Ç–æ-—Ç–æ, –±–æ—Ä–µ—à—å—Å—è, –∞ –ø–æ—Ç–æ–º –≤ –æ–¥–∏–Ω –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–Ω–∏–º–∞–µ—à—å: ¬´–ê –ø–æ—à–ª–æ –æ–Ω–æ –≤—Å–µ –Ω–∞ —Ö@–π! ¬ª –ò –∂–∏—Ç—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–∞–º–Ω–æ–≥–æ –ø—Ä–æ—â–µ.', '"–ê —ç—Ç–æ —Ç–æ—á–Ω–æ –ø–æ–º–æ–∂–µ—Ç? ", ‚Äî –Ω–µ–¥–æ–≤–µ—Ä—á–∏–≤–æ —Å–ø—Ä–∞—à–∏–≤–∞–ª–∞ —Ü–∞—Ä–µ–≤–Ω–∞ –ù–µ—Å–º–µ—è–Ω–∞, –ø–æ–¥–Ω–æ—Å—è –∫ –≥—É–±–∞–º –∫–∞–∫—É—é-—Ç–æ —Å–∞–º–æ–∫—Ä—É—Ç–∫—É.', '–ß—Ç–æ–±—ã —Ö–æ—Ç—å –∫–∞–∫-—Ç–æ –ø—Ä–∏–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –Ω–∞–ø–∏—Å–∞–ª–∞ –Ω–∞ –¥–æ—Å–∫–µ ¬´ –ñ–µ—Å—Ç—å. –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ–º¬ª.', '–ï—Å–ª–∏ –ü–∞—Ç—Ä–∏–∞—Ä—Ö –ö–∏—Ä–∏–ª–ª –≤–µ—Ä–∏—Ç –≤ –ë–æ–≥–∞, —Ç–æ –ø–æ—á–µ–º—É –æ–Ω –µ–∑–¥–∏—Ç –≤ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ú–µ—Ä—Å–µ–¥–µ—Å–µ –ø–æ–¥ –æ—Ö—Ä–∞–Ω–æ–π –§–°–û –∑–∞ —Å—á–µ—Ç –±—é–¥–∂–µ—Ç–∞, –∞ –Ω–µ –Ω–∞–¥–µ–µ—Ç—Å—è –Ω–∞ –∑–∞—Å—Ç—É–ø–Ω–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–µ–≥–æ –Ω–µ–±–µ—Å–Ω–æ–≥–æ –Ω–∞—á–∞–ª—å–Ω–∏–∫–∞?']);

	return bot(`–∞–Ω–µ–∫–¥–æ—Ç: 

	${textanek}`)
});

oscrn(/^(?:—à–∞—Ä)\s([^]+)$/i, async (message, bot) => {
	const phrase = utils.pick(['–ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ', '—Å–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å', '–ø–æ–∫–∞ –Ω–µ —è—Å–Ω–æ', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–î–∞"', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–ù–µ—Ç"', '–º–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º', '–º–æ–π –æ—Ç–≤–µ—Ç - "–Ω–µ—Ç"', '–º–æ–π –æ—Ç–≤–µ—Ç - "–¥–∞"', '–±–µ—Å—Å–ø–æ—Ä–Ω–æ', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–î–∞"', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–ù–µ—Ç"']);
	return bot(phrase);
});

oscrn(/^(?:–≤—ã–±–µ—Ä–∏)\s([^]+)\s(?:–∏–ª–∏)\s([^]+)$/i, async (message, bot) => {
	const first = message.args[1];
	const second = message.args[2];

	const phrase = utils.pick([`–∫–æ–Ω–µ—á–Ω–æ ${utils.random(1, 2)} –≤–∞—Ä–∏–∞–Ω—Ç`, `–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ ${utils.random(1, 2)} –≤–∞—Ä–∏–∞–Ω—Ç –ª—É—á—à–µ`]);
	return bot(`${phrase}`);
});

oscrn(/^–ø—Ä–æ—Ñ–∏–ª—å|–ø—Ä—Ñ|–ø—Ä–æ—Ñ$/i, async (message, bot) => { 
	message.user.foolder += 1;
			let text = ``;

    text += `üìò –ù–∏–∫: ${message.user.tag}\n`;
    text += `üéà –ò–≥—Ä–æ–≤–æ–π –∞–π–¥–∏: ${message.user.uid}\n`;
	text += `üÜî –¶–∏—Ñ—Ä–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: vk.com/id${message.user.id}\n`;
    text += `üÜî –û–±—ã—á–Ω–∞—è —Å—Å—ã–ª–∫–∞: vk.com/${message.user.domain}\n`;    
    text += `‚ô• –ü—Ä–∏–≤–∏–ª–µ–≥–∏—è:  ${message.user.adm.toString().replace(/0/gi, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å").replace(/1/gi, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä").replace(/2/gi, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä").replace(/3/gi, "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫")}\n`;
	text += `üèÜ –û–ø—ã—Ç: ${utils.sp(message.user.opit)}\n`;	
	{
        if(message.user.car || message.user.bicycle || message.user.pet || message.user.airplane || message.user.sotik || message.user.number ||
		message.user.home || message.user.pk)
 	{
		text += `\n üçÄ –ò–º—É—â–µ—Å—Ç–≤–æ:\n`;

		if(message.user.car) text += `\nüöó –ú–∞—à–∏–Ω–∞: ${cars[message.user.car - 1].name}`;
		if(message.user.bicycle) text += `\nüö¥‚Äç‚ôÇ –í–µ–ª–æ—Å–∏–ø–µ–¥: ${bicycles[message.user.bicycle - 1].name}`;
		if(message.user.airplane) text += `\nüõ© –°–∞–º–æ–ª—ë—Ç: ${airplanes[message.user.airplane - 1].name}`;
		if(message.user.sotik) text += `\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phones[message.user.sotik - 1].name}`;
		if(message.user.sotik)	text += `\nüì± –û–ø–µ—Ä–∞—Ç–æ—Ä: ${message.user.operator.toString().replace(/1/gi, "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç \nüíΩ –ö—É–ø–∏—Ç—å SIM: –ö—É–ø–∏—Ç—å –Ω–æ–º–µ—Ä").replace(/2/gi, "–¢–µ–ª–µ2").replace(/3/gi, "–ú–µ–≥–∞—Ñ–æ–Ω").replace(/4/gi, "–ë–∏–ª–∞–π–Ω").replace(/5/gi, "Yota").replace(/5/gi, "Oscrn Ru").replace(/6/gi, "–ú—Ç—Å")}`;
		if(message.user.number) text += `\nüì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +79${message.user.number}`;
        if(message.user.home) text += `\nüè† –î–æ–º: ${homes[message.user.home - 1].name}`;
		if(message.user.pet) text += `\nüêå –ü–∏—Ç–æ–º–µ—Ü: ${pets[message.user.pet - 1].name}`;}
		if(message.user.pk) text += `\nüíª –ö–æ–º–ø—å—é—Ç–µ—Ä: ${peka[message.user.pk - 1].name}`;
		if(message.user.business) text += `\nüíæ –ë–∏–∑–Ω–µ—Å: ${businesses[message.user.business - 1].name}\n`
		}
	text += `\n‚õè –†–∞–±–æ—Ç–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º: ${message.user.work}\n`		
	text += `\n‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: [${message.user.warn}/3]`;
	text += `\n‚ö† –ë–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞: ${message.user.banreport ? "–ï—Å—Ç—å [‚ùå]": "–ù–µ—Ç—É [‚úÖ]"}\n`;
	text += `\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ¬´ üìâ`;
	text += `\nüì© –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${message.user.floder}`;
	text += `\nüì• –í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥: ${message.user.foolder}`;
	text += `\n‚úî –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${message.user.regDate}\n`;
	return message.send(`üìï ¬ª –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å ¬´ üìï\n${text}`);
});	

oscrn(/^(?:–Ω–∏–∫)\s(–≤–∫–ª|–≤—ã–∫–ª)$/i, async (message, bot) => {
	if(message.args[1].toLowerCase() === '–≤–∫–ª')
	{
		message.user.mention = true;
		return bot(`‚ö† –ì–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞`);
	}

	if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
	{
		message.user.mention = false;
		return bot(`‚ö† –ì–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞`);
	}
});

oscrn(/^(?:–Ω–∏–∫)\s(.*)$/i, async (message, bot) => {
	if(message.args[1].length >= 16) return bot(`–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 15 —Å–∏–º–≤–æ–ª–æ–≤`);

	message.user.tag = message.args[1];
	return bot(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—à –Ω–æ–≤—ã–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫: "${message.user.tag}"`);
});


oscrn(/^(?:–±–æ–Ω—É—Å)$/i, async (message, bot) => {
	if(message.user.timers.bonus) return bot(`–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –±–æ–Ω—É—Å –∑–∞ —ç—Ç–∏ 24 —á–∞—Å–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 24 —á–∞—Å–∞, –∏ –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –µ—â–µ —Ä–∞–∑ –±–æ–Ω—É—Å.`);
	let bonus = utils.pick([1, 2, 3, 4, 5]);

	setTimeout(() => {
		message.user.timers.bonus = false;
	}, 86400000);

	message.user.timers.bonus = true;

	if(bonus === 1)
	{
		message.user.balance += 50000;
		return message.send(`‚öì –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: 50.000$`);
	}

	if(bonus === 2)
	{
		message.user.btc += 100;
		return message.send(`‚öì –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: 100‚Çø`);
	}

	if(bonus === 3)
	{
		message.user.balance += 75000;
		message.user.btc += 46;
		return message.send(`‚öì –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: 75.000$ –∏ 46‚Çø`);
	}

	if(bonus === 4)
	{
		message.user.btc += 15;
		return message.send(`‚öì –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: 15‚Çø`);
	}

	if(bonus === 5)
	{
		message.user.balance += 25000;
		return message.send(`‚öì –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: 25.000$`);
	}
});

oscrn(/^(?:—Ä–∞–±–æ—Ç–∞)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.work) return bot(`–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –≤–∞—à–∞ —Ä–∞–±–æ—Ç–∞ ${works[message.user.work - 1].name}
	${message.user.timers.hasWorked ? `–û—Ç–¥–æ—Ö–Ω–∏—Ç–µ 10 –º–∏–Ω—É—Ç, –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å` : ``}`);

	const work = works.find(x=> x.id === Number(message.args[1]));
	if(!work) return console.log(message.args[1]);

	if(work.requiredLevel > message.user.lvl) return bot(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É, –≤–∞—à —É—Ä–æ–≤–µ–Ω—å —Å–ª–∏—à–∫–æ–º –º–∞–ª`);

	else if(work.requiredLevel <= message.user.lvl)
	{
		message.user.work = work.id;
		return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É ${work.name}
		üëî –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–†–∞–±–æ—Ç–∞—Ç—å"`);
	}
});

oscrn(/^(?:—Ä–∞–±–æ—Ç–∞)$/i, async (message, bot) => {
	if(message.user.work) return bot(`–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –≤–∞—à–∞ —Ä–∞–±–æ—Ç–∞ ${works[message.user.work - 1].name}
	${message.user.timers.hasWorked ? `–û—Ç–¥–æ—Ö–Ω–∏—Ç–µ 10 –º–∏–Ω—É—Ç, –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å` : ``}`);
	return bot(`–°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç:
	‚úÖ 1. –ì—Ä—É–∑—á–∏–∫ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~10.000$
	‚úÖ 2. –í–æ–¥–∏—Ç–µ–ª—å –∞–≤—Ç–æ–±—É—Å–∞ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~20.000$
	‚úÖ 3. –í–æ–¥–∏—Ç–µ–ª—å —Å–∫–æ—Ä–æ–π –ø–æ–º–æ—â–∏ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~30.000$
	‚úÖ 4. –ü–æ–º–æ—â–Ω–∏–∫ –º–∞—à–∏–Ω–∏—Å—Ç–∞ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~40.000$
	‚úÖ 5. –ú–∞—à–∏–Ω–∏—Å—Ç - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~50.000$
	
	–ß—Ç–æ-–±—ã —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É, –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç–∞ [–Ω–æ–º–µ—Ä —Ä–∞–±–æ—Ç—ã]`);
});

oscrn(/^(?:—Ä–∞–±–æ—Ç–∞—Ç—å)$/i, async (message, bot) => {
	if(!message.user.work) return bot(`üò© –í—ã –µ—â–µ –Ω–µ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É\n–î–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç–∞"`);
		
		if(message.user.timers.hasWorked) return bot(`–í–∞—à–∞ —Å–º–µ–Ω–∞ –±—ã–ª–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞\n‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç`);
	
	setTimeout(() => {
		message.user.timers.hasWorked = false;
	}, 600000);
		
	
	if(message.user.timers.hasWorked) return bot(`–í–∞—à–∞ —Å–º–µ–Ω–∞ –±—ã–ª–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞\n‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç`);

	setTimeout(() => {
		message.user.timers.hasWorked = false;
	}, 600000);

	message.user.timers.hasWorked = true;

	const work = works.find(x=> x.id === message.user.work);
	const earn = utils.random(work.min, work.max);

	message.user.balance += earn;
	message.user.exp += 1;

	return bot(`üíµ –í–∞—à–∞ —Å–º–µ–Ω–∞ –±—ã–ª–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞\nüíµ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${utils.sp(earn)}$`);
	

});

oscrn(/^(?:—É–≤–æ–ª–∏—Ç—å—Å—è)$/i, async (message, bot) => {
	if(!message.user.work) return bot(`–í—ã –µ—â–µ –Ω–µ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É`);
	
	message.user.work = 0;
	return bot(`–≠—Ö, —É–≤–æ–ª–∏–ª—Å—è —Å–∞–º—ã–π –ª—É—á—à–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫...`);
});

oscrn(/^(?:—Ä–µ–ø–æ—Ä—Ç|—Ä–µ–ø|rep|–∂–∞–ª–æ–±–∞)\s([^]+)$/i, async (message, bot) => {
	message.user.foolder += 1;
	if(message.isChat) return message.reply(`‚ùó ${message.user.tag}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å —Ä–µ–ø–æ—Ä—Ç –≤ –±–µ—Å–µ–¥–µ.`);
	if(message.user.banreport == true) return message.reply('üòï –í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç.')

       let zaprets1 = message.args[1].toLowerCase();
    var zapret = /(–Ω–∞—Ö–æ–π|–ø–æ—Å—Ä–∞—Ç—å|–±–ª—è–¥—å|–±–ª—è–¥|–±–ª—è—Ç—å|–±–ª—è—å|–±–ª—è—Ç|–±–ª—è–¥—Ç|–±–ª—è|üì¨|ü•É|üë®‚Äç|üöÄÔ∏è|üë©‚Äç‚öñÔ∏è|üë®‚Äç‚öñÔ∏è|üéÖ|üë∏|ü§¥|üë∞|ü§µ|üëº|ü§∞|üôá‚Äç‚ôÄÔ∏è|üôá|üíÅ|üíÅ‚Äç‚ôÇÔ∏è|üôÖ|üôÖ‚Äç‚ôÇÔ∏è|üôÜ|üôÜ‚Äç‚ôÇÔ∏è|üôã|üôã‚Äç‚ôÇÔ∏è|ü§¶‚Äç‚ôÄÔ∏è|ü§¶‚Äç‚ôÇÔ∏è|ü§∑‚Äç‚ôÄÔ∏è|ü§∑‚Äç‚ôÇÔ∏è|üôé|üôé‚Äç‚ôÇÔ∏è|üôç|üôç‚Äç‚ôÇÔ∏è|üíá|üíá‚Äç‚ôÇÔ∏è|üíÜ|üíÜ‚Äç‚ôÇÔ∏è|üï¥|üíÉ|üï∫|üëØ|üëØ‚Äç‚ôÇÔ∏è|üö∂‚Äç‚ôÄÔ∏è|üö∂|üèÉ‚Äç‚ôÄÔ∏è|üèÉ|üë´|üë≠|üë¨|üíë|üíè|üë™|üëö|üëï|üëñ|üëî|üëó|üëô|üëò|üë†|üë°|üë¢|üëû|üëü|üëí|üé©|üëë|‚õë|üéí|üëù|üëõ|üëú|üíº|üëì|üï∂|üåÇ|‚òÇ|üòÄ|üòÉ|üòÑ|üòÅ|üòÜ|üòÖ|üòÇ|ü§£|‚ò∫|üòä|üòá|üôÇ|üôÉ|üòâ|üòå|üòç|üòò|üòó|üòô|üòö|üòã|üòú|üòù|üòõ|ü§ë|ü§ó|ü§ì|üòé|ü§°|ü§†|üòè|üòí|üòû|üòî|üòü|üòï|üôÅ|‚òπ|üò£|üòñ|üò´|üò©|üò§|üò†|üò°|üò∂|üòê|üòë|üòØ|üò¶|üòß|üòÆ|üò≤|üòµ|üò≥|üò±|üò®|üò∞|üò¢|üò•|ü§§|üò≠|üòì|üò™|üò¥|üôÑ|ü§î|ü§•|üò¨|ü§ê|ü§¢|ü§ß|üò∑|ü§í|ü§ï|üòà|üëø|üëπ|üë∫|üí©|üëª|üíÄ|‚ò†|üëΩ|üëæ|ü§ñ|üéÉ|üò∫|üò∏|üòπ|üòª|üòº|üòΩ|üôÄ|üòø|üòæ|üëê|üôå|üëè|üôè|ü§ù|üëç|üëé|üëä|‚úä|ü§õ|ü§ú|ü§û|‚úå|ü§ò|üëå|üëà|üëâ|üëÜ|üëá|‚òù|‚úã|üñê|üññ|üëã|ü§ô|üí™|üñï|‚úç|ü§≥|üíÖ|üññ|üíÑ|üíã|üëÑ|üëÖ|üëÇ|üëÉ|üë§|üë£|üëÅ|üëÄ|üó£|üë•|üë∂|üë¶|üëß|üë®|üë©|üë±‚Äç‚ôÄÔ∏è|üë±|üë¥|üëµ|üë≤|üë≥‚Äç‚ôÄÔ∏è|üë≥|üëÆ‚Äç‚ôÄÔ∏è|üëÆ|üë∑‚Äç‚ôÄÔ∏è|üë∑|üíÇ‚Äç‚ôÄÔ∏è|üíÇ|üïµ‚Äç‚ôÄÔ∏è|üïµ|üë©‚Äç‚öïÔ∏è|üë®‚Äç‚öïÔ∏è|üë©‚ÄçüåæÔ∏è|üë®‚ÄçüåæÔ∏è|üë©‚Äçüç≥Ô∏è|üë®‚Äçüç≥Ô∏è|üë©‚ÄçüéìÔ∏è|üë®‚ÄçüéìÔ∏è|üë©‚Äçüé§Ô∏è|üë®‚Äçüé§Ô∏è|üë©‚Äçüè´Ô∏è|üë®‚Äçüè´Ô∏è|üë©‚Äçüè≠Ô∏è|üë®‚Äçüè≠Ô∏è|üë©‚ÄçüíªÔ∏è|üë®‚ÄçüíªÔ∏è|üë©‚ÄçüíºÔ∏è|üë®‚ÄçüíºÔ∏è|üë©‚ÄçüîßÔ∏è|üë®‚ÄçüîßÔ∏è|üë©‚Äçüî¨Ô∏è|üë®‚Äçüî¨Ô∏è|üë©‚Äçüé®Ô∏è|üë®‚Äçüé®Ô∏è|üë©‚ÄçüöíÔ∏è|üë®‚ÄçüöíÔ∏è|üë©‚Äç‚úàÔ∏è|üë®‚Äç‚úàÔ∏è|üë©‚ÄçüöÄÔ∏è|üë®‚ÄçüöÄÔ∏è|üë©‚Äç‚öñÔ∏è|üë®‚Äç‚öñÔ∏è|üéÖ|üë∏|ü§¥|üë∞|ü§µ|üëº|ü§∞|üôá‚Äç‚ôÄÔ∏è|üôá|üíÅ|üíÅ‚Äç‚ôÇÔ∏è|üôÖ|üôÖ‚Äç‚ôÇÔ∏è|üôÜ|üôÜ‚Äç‚ôÇÔ∏è|üôã|üôã‚Äç‚ôÇÔ∏è|ü§¶‚Äç‚ôÄÔ∏è|ü§¶‚Äç‚ôÇÔ∏è|ü§∑‚Äç‚ôÄÔ∏è|ü§∑‚Äç‚ôÇÔ∏è|üôé|üôé‚Äç‚ôÇÔ∏è|üôç|üôç‚Äç‚ôÇÔ∏è|üíá|üíá‚Äç‚ôÇÔ∏è|üíÜ|üíÜ‚Äç‚ôÇÔ∏è|üï¥|üíÉ|üï∫|üëØ|üëØ‚Äç‚ôÇÔ∏è|üö∂‚Äç‚ôÄÔ∏è|üö∂|üèÉ‚Äç‚ôÄÔ∏è|üèÉ|üë´|üë≠|üë¨|üíë|üíè|üë™|üëö|üëï|üëñ|üëî|üëó|üëô|üëò|üë†|üë°|üë¢|üëû|üëü|üëí|üé©|üéì|üëë|‚õë|üéí|üëù|üëõ|üëú|üíº|üëì|üï∂|üåÇ|‚òÇ|#|–∂–æ–ø–∞|–ø—Ä–æ–µ–±—É|–∞–Ω–∞–ª—å–Ω–æ|–Ω–∞—Ä–∫–æ—Ç–æ—Ä–≥–æ–≤–µ—Ü|–Ω–∞—Ä–∫–æ—Ç–∞|–Ω–∞—Ä–∫–æ—Ç–∏–∫–∏|–ø–æ–¥–∫–ª–∞–¥–∫–∞|–ø–æ–¥–∫–ª–∞–¥–∫–∏|–∫–æ–∫–æ–∏–Ω|–∫–æ–∫–∞–∏–Ω|–ø–æ—Ä–Ω–æ|—Ö–µ–Ω—Ç–∞–π|—Å–µ–∫—Å|–ø–∏–¥—Ä|—Ç—Ä–∞—Ö|–Ω–∞—Å–∏–ª–∏–µ|–∑–æ–æ—Ñ–∏–ª|–±–¥—Å–º|—Å–∏—Ä–∏—è|hentai|hentay|—Å–∏–Ω–∏–π –∫–∏—Ç|—Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ|—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç—ã|—Å–ª–∏–≤|—Ü–ø|cp|–º–∞–ª–µ–Ω—å–∫–∏–µ|–º–∞–ª–æ–ª–µ—Ç–∫–∏|—Å—É—á–∫–∏|—Ç—Ä–∞—Ö|–µ–±–ª—è|–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–Ω–∏–µ|–±–ª—è—Ç—å|—Ö—É–π|–ø–æ—à–µ–ª –Ω–∞—Ö|—Ç–≤–∞—Ä—å|–º—Ä–∞–∑—å|—Å—É—á–∫–∞|–≥–∞–Ω–¥–æ–Ω|—É–µ–±–æ–∫|—à–ª—é—Ö|–ø–∞—Å–∫—É–¥–∞|–æ—Ä–≥–∞–∑–º|–¥–µ–≤—Å—Ç–≤–µ–Ω–Ω–∏—Ü—ã|—Ü–µ–ª–∫–∏|—Ä–∞—Å—Å–æ–≤–æ–µ|–º–µ–ª–∫–∏–µ|–º–∞–ª–æ–ª–µ—Ç–∫–∏|–Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–µ|–µ–±–ª—è|—Ö–µ–Ω—Ç–∞–π|sex|bdsm|ebl|trax|syka|shlux|–∏–Ω—Ü–µ—Å—Ç|iznas|–º–∞—Ç—å|–¥–æ–ª–±–∞–µ–±|–¥–æ–ª–±–∞—ë–±|—Ö—É–µ—Å–æ—Å|—Å—É—á–∫–∞|—Å—É–∫–∞|—Ç–≤–∞—Ä—å|–ø–µ–∑–¥—é–∫|—Ö—É–π|—à–ª—é—Ö|–±–æ–≥|—Å–∞—Ç–∞–Ω–∞|–º—Ä–∞–∑—å)/
    var sss = zapret.test(zaprets1) 
if(zapret.test(zaprets1) == true){
    var check = true;
    return message.send(`üòá –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤ —Ä–µ–ø–æ—Ä—Ç–µ –≤–æ–ø—Ä–æ—Å—ã, –∞ –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∏—Ç–µ –±–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞.\n‚úâ –ü—Ä–∏—á–∏–Ω–∞: –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã/–º–∞—Ç—ã –≤ —Ä–µ–ø–æ—Ä—Ç–∞—Ö.`);
}
	message.user.report = true;
	    for(a=0;a<users.length;a++){
     	let user = users[a];
  
         if(user) {
        	if(user.adm >= 1) {               
                 vk.api.messages.send({ 
                    user_id: user.id, 
                    message: `üåà REPORT \nüÜî USER: @id${message.user.id}\nüì© GAME ID: ${message.user.uid}\nüìú TEXT: \n${message.args[1]}`, 
                    random_id: 0 
                }).catch((error) => {console.log('report error:\n'+error); });                  
             }
          }
      }
      return message.send(`üí¨ –†–µ–ø–æ—Ä—Ç –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É. \nüë§ –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.`); 
});

oscrn(/^(?:–æ—Ç–≤–µ—Ç)\s([0-9]+)\s([^]+)$/i, async (message, bot) => { 
			if(message.user.adm < 1) return;
admlogs(message)
message.user.foolder += 1;
	const user = await users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return;
	user.report = false;
	vk.api.messages.send({ user_id: user.id, message: `
üí¨ –ü–æ—Å—Ç—É–ø–∏–ª –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à —Ä–µ–ø–æ—Ä—Ç:
üì© –û—Ç–≤–µ—Ç: ${message.args[2]}` });	
	return message.send(`üìô [id${message.user.id}|${message.user.tag}], –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.`)


});

oscrn(/^(?:–±–∞–ª–∞–Ω—Å|üí∏ –ë–∞–ª–∞–Ω—Å)$/i, async (message, bot) => {
		let text = `üî• @id${message.user.id} (${message.user.tag}), –≤–∞—à–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è: 
		
		ü§ë –ù–∞ —Ä—É–∫–∞—Ö ${utils.sp(message.user.balance)}$`;
	
		if(message.user.bank) text += `\nüí≥ –ù–∞ –∫–∞—Ä—Ç–µ ${utils.sp(message.user.bank)}$`;
		if(message.user.btc) text += `\nüåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}‡∏ø`;
		if(message.user.zhelezo) text += `\nüéõ ${utils.sp(message.user.zhelezo)} –∂–µ–ª–µ–∑–∞`;
		if(message.user.zoloto) text += `\nüèµ ${utils.sp(message.user.zoloto)} –∑–æ–ª–æ—Ç–∞`;
		if(message.user.almaz) text += `\nüíé ${utils.sp(message.user.almaz)} –∞–ª–º–∞–∑–∞`;
		if(message.user.uran) text += `\nüåå ${utils.sp(message.user.uran)} –∞–Ω—Ç–∏–º–∞—Ç–µ—Ä–∏–∏`;
	
	message.send(`${text}`);
	});

oscrn(/^(?:–±–∞–Ω–∫|üí≥ –ë–∞–Ω–∫)$/i, async (message, bot) => {
		if(message.user.bank < 1) return bot(`–≤–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç –ø—É—Å—Ç. üò¨`);
		bot(`–Ω–∞ –±–∞–ª–∞–Ω—Å–µ –≤ –±–∞–Ω–∫–µ ${utils.sp(message.user.bank)}$ –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã üî•
		üí∞ –í–≤–µ–¥–∏—Ç–µ "–ë–∞–Ω–∫ [–∫–æ–ª-–≤–æ]" –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è`);
	});

oscrn(/^(?:–±–∞–Ω–∫)\s(?:—Å–Ω—è—Ç—å)\s(.*)$/i, async (message, bot) => {
		message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
		message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
		message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
		message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.bank);
	
		if(!Number(message.args[1])) return;
		message.args[1] = Math.floor(Number(message.args[1]));
	
		if(message.args[1] <= 0) return;
	
		if(message.args[1] > message.user.bank) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã. üò¨`);
		else if(message.args[1] <= message.user.bank)
		{
			message.user.balance += message.args[1];
			message.user.bank -= message.args[1];
	
			return bot(`–≤—ã —Å–Ω—è–ª–∏ ${utils.sp(message.args[1])}$
			üî• –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.bank)}$
	üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
		}
	});

oscrn(/^(?:–±–∞–Ω–∫)\s(.*)$/i, async (message, bot) => {
		message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
		message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
		message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
		let babka = message.user.bank + message.args[1];
		message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
	
		if(!Number(message.args[1])) return;
		message.args[1] = Math.floor(Number(message.args[1]));
		if(message.args[1] > 1000000000000) return bot(`–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –º–æ–∂–Ω–æ –ª–∏—à—å 1 —Ç—Ä–ª–Ω!`)
	
		if(message.user.adm > 2) return bot(`–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç. üö´`);
		if(message.args[1] < 1) return bot(`–Ω–∞ –±–∞–ª–∞–Ω—Å–µ –≤ –±–∞–Ω–∫–µ ${utils.sp(message.user.bank)}$
	‚úçüèª –í–≤–µ–¥–∏—Ç–µ "–ë–∞–Ω–∫ —Å–Ω—è—Ç—å [–∫–æ–ª-–≤–æ]" –¥–ª—è —Å–Ω—è—Ç–∏—è`);
	
	
		if(message.args[1] > message.user.balance) return bot(`–Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥.üö´`);
		if(message.args[1] > babka) return bot(`–≤ –±–∞–Ω–∫–µ –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ 1 —Ç—Ä–ª–Ω!`)
		else if(message.args[1] <= message.user.balance)
		{
			message.user.balance -= message.args[1];
			message.user.bank += message.args[1];
	
			return bot(`–≤—ã –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –±–∞–Ω–∫ ${utils.sp(message.args[1])}$ üí∏
			üî• –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ ${utils.sp(message.user.balance)}$`);
		}
	});

oscrn(/^(?:–∫–æ–ø–∞—Ç—å)$/i, async (message, bot) => { 
if(message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–°. üîÅ`);
return bot(`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ¬´–∫–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ/–∑–æ–ª–æ—Ç–æ/–∞–ª–º–∞–∑—ã/–∞–Ω—Ç–∏–º–∞—Ç–µ—Ä–∏—é¬ª üòî`);

});

oscrn(/^(?:–∫–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ|üéõ –ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ|@sm4bot üéõ –ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ)$/i, async (message, bot) => { 
if(message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–°. üîÅ`);
if(message.user.energy < 1) return bot(`–≤—ã —Å–∏–ª—å–Ω–æ —É—Å—Ç–∞–ª–∏.
‚ö† –≠–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç!`);

let randzhelezo = utils.random(16, 97);
let a = 0;
if(message.user.zelya === 2) a += 45;

message.user.energy -= 1;
message.user.opit += 1;
message.user.zhelezo += randzhelezo;
message.user.zhelezo += a;

saveAll();

if(message.user.energy > 0) return bot(`+${randzhelezo} –∂–µ–ª–µ–∑–∞.
üí° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`, 
{ 
keyboard:JSON.stringify( 
{
"inline": true,
"buttons": [ 
[{ 
"action": { 
"type": "text", 
"payload": "{}", 
"label": `üéõ –ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ` 
}, 
"color": "positive" 
}] 
] 
}) 
});

if(message.user.energy < 1) {

setTimeout(() => {
	message.user.energy = 10;
}, 3000000);

return bot(`+${randzhelezo} –∂–µ–ª–µ–∑–∞.
–≠–Ω–µ—Ä–≥–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å. ‚ö†`, 
{ 
keyboard:JSON.stringify( 
{
"inline": true,
"buttons": [ 
[{ 
"action": { 
"type": "text", 
"payload": "{}", 
"label": `üéõ –ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ` 
}, 
"color": "positive" 
}] 
] 
}) 
});

}

});

oscrn(/^(?:–∫–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ|üèµ –ö–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ)$/i, async (message, bot) => { 
if(message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–°. üîÅ`);
if(message.user.opit < 300) return bot(`—á—Ç–æ –±—ã –∫–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 300 –æ–ø—ã—Ç–∞. –ö–æ–ø–∞–π—Ç–µ –∂–µ–ª–µ–∑–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç! ‚ö†`);

if(message.user.energy < 1) return bot(`–≤—ã —Å–∏–ª—å–Ω–æ —É—Å—Ç–∞–ª–∏.
‚ö† –≠–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç!`);

let randzoloto = utils.random(5, 35);
let a = 0;
if(message.user.zelya === 2) a += 15;

message.user.energy -= 1;
message.user.opit += 2;
message.user.zoloto += randzoloto;
message.user.zoloto += a;

saveAll();

if(message.user.energy > 0) return bot(`+${randzoloto} –∑–æ–ª–æ—Ç–∞.
üí° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`, 
{ 
keyboard:JSON.stringify( 
{
"inline": true,
"buttons": [ 
[{ 
"action": { 
"type": "text", 
"payload": "{}", 
"label": `üèµ –ö–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ`
}, 
"color": "positive" 
}] 
] 
}) 
});

if(message.user.energy < 1) {

setTimeout(() => {
	message.user.energy = 10;
}, 3000000);

return bot(`+${randzoloto} –∑–æ–ª–æ—Ç–∞.
–≠–Ω–µ—Ä–≥–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å. ‚ö†`, 
{ 
keyboard:JSON.stringify( 
{
"inline": true,
"buttons": [ 
[{ 
"action": { 
"type": "text", 
"payload": "{}", 
"label": `üèµ –ö–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ`
}, 
"color": "positive" 
}] 
] 
})
});

}

});

oscrn(/^(?:–∫–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã|üíé –ö–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã)$/i, async (message, bot) => { 
if(message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–°. üîÅ`);
if(message.user.opit < 3000) return bot(`—á—Ç–æ –±—ã –∫–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 3 000 –æ–ø—ã—Ç–∞. –ö–æ–ø–∞–π—Ç–µ –∂–µ–ª–µ–∑–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç! ‚ö†`);

if(message.user.energy < 1) return bot(`–≤—ã —Å–∏–ª—å–Ω–æ —É—Å—Ç–∞–ª–∏.
‚ö† –≠–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç!`);

let randalmaz = utils.random(1, 4);
let a = 0;
if(message.user.zelya === 2) a += 2;

message.user.energy -= 1;
message.user.opit += 3;
message.user.almaz += randalmaz;
message.user.almaz += a;

saveAll();

if(message.user.energy > 0) return bot(`+${randalmaz} –∞–ª–º–∞–∑–æ–≤.
üí° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`, 
{ 
keyboard:JSON.stringify( 
{
"inline": true,
"buttons": [ 
[{ 
"action": { 
"type": "text", 
"payload": "{}", 
"label": `üíé –ö–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã`
}, 
"color": "positive" 
}] 
] 
}) 
});

if(message.user.energy < 1) {

setTimeout(() => {
	message.user.energy = 10;
}, 3000000);
return bot(`+${randalmaz} –∞–ª–º–∞–∑–æ–≤.
–≠–Ω–µ—Ä–≥–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å. ‚ö†`, 
{ 
keyboard:JSON.stringify( 
{
"inline": true,
"buttons": [ 
[{ 
"action": { 
"type": "text", 
"payload": "{}", 
"label": `üíé –ö–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã`
}, 
"color": "positive" 
}] 
] 
}) 
});

}

});

oscrn(/^(?:–∫–æ–ø–∞—Ç—å –∞–Ω—Ç–∏–º–∞—Ç–µ—Ä–∏—é|üåå –ö–æ–ø–∞—Ç—å –∞–Ω—Ç–∏–º–∞—Ç–µ—Ä–∏—é)$/i, async (message, bot) => { 
if(message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–°. üîÅ`);
if(message.user.opit < 99999) return bot(`—á—Ç–æ –±—ã –∫–æ–ø–∞—Ç—å –∞–Ω—Ç–∏–º–∞—Ç–µ—Ä–∏—é –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 100 000 –æ–ø—ã—Ç–∞. –ö–æ–ø–∞–π—Ç–µ –∂–µ–ª–µ–∑–æ/–∑–æ–ª–æ—Ç–æ/–∞–ª–º–∞–∑—ã –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç! ‚ö†`);

if(message.user.energy < 1) return bot(`–≤—ã —Å–∏–ª—å–Ω–æ —É—Å—Ç–∞–ª–∏.
‚ö† –≠–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç!`);

let randuran = utils.random(1, 2);
let a = 0;
if(message.user.zelya === 2) a += 1;

message.user.energy -= 1;
message.user.opit += 50;
message.user.uran += randuran;
message.user.uran += a;

saveAll();

if(message.user.energy > 0) return bot(`+${randuran} –∞–Ω—Ç–∏–º–∞—Ç–µ—Ä–∏–∏. üåå
üí° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`, 
{ 
keyboard:JSON.stringify( 
{
"inline": true,
"buttons": [ 
[{ 
"action": { 
"type": "text", 
"payload": "{}", 
"label": `üåå –ö–æ–ø–∞—Ç—å –∞–Ω—Ç–∏–º–∞—Ç–µ—Ä–∏—é`
}, 
"color": "positive" 
}] 
] 
}) 
});

if(message.user.energy < 1) {

setTimeout(() => {
	message.user.energy = 10;
}, 3000000);

return bot(`+${randuran} –∞–Ω—Ç–∏–º–∞—Ç–µ—Ä–∏–∏. üåå
–≠–Ω–µ—Ä–≥–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å. ‚ö†`, 
{ 
keyboard:JSON.stringify( 
{
"inline": true,
"buttons": [ 
[{ 
"action": { 
"type": "text", 
"payload": "{}", 
"label": `üåå –ö–æ–ø–∞—Ç—å –∞–Ω—Ç–∏–º–∞—Ç–µ—Ä–∏—é`
}, 
"color": "positive" 
}] 
] 
}) 
});

}

});

oscrn(/^(?:–∫—É–±–∏–∫|–∫—É–±|üé≤ –∫—É–±–∏–∫)\s([1-6])$/i, async (message, bot) => {
			const int = utils.pick([1, 2, 3, 4, 5, 6]);
			if(int == message.args[1])
			{
				progressQuest(message.user, 2)
				message.user.balance += 2000000;
				return bot(`–≤—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ 2.000.000$`);
			} else { 
				resetQuest(message.user, 2)
				return bot(`–Ω–µ —É–≥–∞–¥–∞–ª–∏ 
			üé≤ –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ ${int}`, 
		{ 
		keyboard:JSON.stringify( 
		{
		"inline": true,
		"buttons": [ 
		[{ 
		"action": { 
		"type": "text", 
		"payload": "{}", 
		"label": `üé≤ –∫—É–±–∏–∫ ${message.args[1]}` 
		}, 
		"color": "default" 
		}] 
		] 
		}) 
		});
		
		}
		
		});
		
oscrn(/^(?:–∫–∞–∑–∏–Ω–æ|üé≤ –∫–∞–∑–∏–Ω–æ)\s?(.*)?$/i, async (message, bot) => {
			message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
			message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
			message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
			message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
			let smilelose = utils.pick(['','','','','','','','']);
			let smilewin = utils.pick(['','','','','','','','','','','','','','','','','','',''])
		
			let proigrish1 = 0.75;
			let proigrish2 = 0.50;
			let proigrish3 = 0.25;
			
			
			if(!Number(message.args[1])) return;
			message.args[1] = Math.floor(Number(message.args[1]));
			
			if(message.args[1] <= 0) return;
			if(message.args[1] < 49) return bot(`—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ 50! üé≤`)
			
			if(message.user.balance == 0 || message.user.balance < 1) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥.`)
			if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
			else if(message.args[1] <= message.user.balance && message.user.balance <= 50000000000) 
			{ 
			message.user.balance -= message.args[1]; 
			const multiply = utils.pick([0, 0, 2, 0, 50, 1, 0.75, 2, 1, 0, 5, 2, 3, 3, 3, 1, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 5, 0.5, 0.5, 0.75, 0.75, 0.75, 5, 0.75, 0.75, 5, 0.75]); 
			
			message.user.balance += Math.floor(message.args[1] * multiply); 
			
			if (multiply > 1)
			progressQuest(message.user, 3)
			else
			resetQuest(message.user, 3)
			
			return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å` : `${multiply === 0.75 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish3)}$` : `${multiply === 0.25 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish1)}$` : `${multiply === 0 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * 1)}$ ‚úñ` : `${multiply === 0.50 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$`}`}`}`}`} (x${multiply})
				üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`, 
				{ 
				keyboard:JSON.stringify( 
				{
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": `üé≤ –ö–∞–∑–∏–Ω–æ ${message.args[1]}` 
				}, 
				"color": "default"  
				}] 
				] 
				}) 
				}) 
			} 
			
			else if(message.args[1] <= message.user.balance && message.user.balance > 50000000000 && message.user.balance <= 300000000000) 
			{ 
			message.user.balance -= message.args[1]; 
			const multiply = utils.pick([0, 0, 0, 0.25, 0.50, 0.75, 0.25, 0, 10, 1, 5, 5, 1, 0, 0, 2, 0, 50, 1, 0.75, 2, 1, 0, 3, 3, 3, 3, 1, 1, 2, 2, 2, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75]); 
			
			message.user.balance += Math.floor(message.args[1] * multiply);
			
			if (multiply > 1)
			progressQuest(message.user, 3)
			else
			resetQuest(message.user, 3)
			
			return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å` : `${multiply === 0.75 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish3)}$` : `${multiply === 0.25 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish1)}$` : `${multiply === 0 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * 1)}$ ‚úñ` : `${multiply === 0.50 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$`}`}`}`}`} (x${multiply})
				üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`, 
				{ 
				keyboard:JSON.stringify( 
				{
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": `üé≤ –∫–∞–∑–∏–Ω–æ ${message.args[1]}` 
				}, 
				"color": "default"  
				}] 
				] 
				}) 
				})
			} 
			
			else if(message.args[1] <= message.user.balance && message.user.balance > 300000000000 && message.user.balance <= 1000000000000) 
			{ 
			message.user.balance -= message.args[1]; 
			const multiply = utils.pick([ 0, 0.75, 1, 0.25, 0.75, 1, 0.25, 0.25, 0, 0, 0, 0, 0, 0, 0, 5, 1, 3, 3, 0, 0, 2, 0, 50, 1, 0.75, 2, 1, 0, 3, 1, 2, 2, 2, 2, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75]); 
			
			message.user.balance += Math.floor(message.args[1] * multiply); 
			
			if (multiply > 1)
			progressQuest(message.user, 3)
			else
			resetQuest(message.user, 3)
			
			return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å` : `${multiply === 0.75 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish3)}$` : `${multiply === 0.25 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish1)}$` : `${multiply === 0 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * 1)}$ ‚úñ` : `${multiply === 0.50 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$`}`}`}`}`} (x${multiply})
				üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`, 
				{ 
				keyboard:JSON.stringify( 
				{
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": `üé≤ –∫–∞–∑–∏–Ω–æ ${message.args[1]}` 
				}, 
				"color": "default"  
				}] 
				] 
				}) 
				})
			}
			
			else if(message.args[1] <= message.user.balance && message.user.balance > 1000000000000 && message.user.balance <= 10000000000000) 
			{ 
			message.user.balance -= message.args[1]; 
			const multiply = utils.pick([ 0, 0.75, 1, 0.25, 0.75, 1, 0.25, 0.25, 0, 0, 0, 0, 0, 2, 1,  0, 0, 1, 3, 0, 0, 2, 0, 50, 1, 0.75, 2, 1, 0, 3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75]); 
			
			message.user.balance += Math.floor(message.args[1] * multiply); 
			
			if (multiply > 1)
			progressQuest(message.user, 3)
			else
			resetQuest(message.user, 3)
			
			return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å` : `${multiply === 0.75 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish3)}$` : `${multiply === 0.25 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish1)}$` : `${multiply === 0 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * 1)}$ ‚úñ` : `${multiply === 0.50 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$`}`}`}`}`} (x${multiply})
				üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`, 
				{ 
				keyboard:JSON.stringify( 
				{
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": `üé≤ –∫–∞–∑–∏–Ω–æ ${message.args[1]}` 
				}, 
				"color": "default"  
				}] 
				] 
				}) 
				})
			} 
			else if(message.args[1] <= message.user.balance && message.user.balance > 10000000000000)
			{ 
			message.user.balance -= message.args[1]; 
			const multiply = utils.pick([0.25, 0.25, 1, 1, 2, 2, 0, 2, 0, 2, 2, 0, 0.75, 1, 0.25, 0.75, 1, 0.25, 0.25, 0, 0, 0, 0.75, 0.25, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 0.75, 1, 0.25, 0.75, 1, 0.25, 0.25, 0, 0, 0, 0.75, 2, 2, 1, 0.25, 0.25, 0.75, 1, 2, 2, 0.25, 0.75, 1, 0.25, 0.25, 0.75, 1, 0.25, 0.75, 2, 2, 0.25, 0.75, 1, 0.25, 0.75, 0.25, 0.75, 1, 0.25, 0.75, 0.25, 0.75, 1, 0.25, 0.75, 0.25, 0.75, 1, 0.25, 0.75, 1, 2, 2, 5, 2, 1, 0.50, 0.25, 0.25, 0.75, 0.50, 0.25, 0.25, 0.75, 0.50, 0.25, 0.75, 0.50, 5, 1, 2, 0.50, 0.25, 0, 1, 2, 2, 5, 2, 1, 2, 5, 0, 0.25, 0, 1, 0, 1, 0, 2, 1, 0.25, 0.75, 0.50, 2, 0]); 
			
			message.user.balance += Math.floor(message.args[1] * multiply); 
			
			if (multiply > 1)
			progressQuest(message.user, 3)
			else
			resetQuest(message.user, 3)
			
			return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å` : `${multiply === 0.75 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish3)}$` : `${multiply === 0.25 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * proigrish1)}$` : `${multiply === 0 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * 1)}$ ‚úñ` : `${multiply === 0.50 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$`}`}`}`}`} (x${multiply})
				üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`, 
			{ 
			keyboard:JSON.stringify( 
			{
			"inline": true,
			"buttons": [ 
			[{ 
			"action": { 
			"type": "text", 
			"payload": "{}", 
			"label": `üé≤ –∫–∞–∑–∏–Ω–æ ${message.args[1]}` 
			}, 
			"color": "default"  
			}] 
			] 
			}) 
			})
			}
			});
		
oscrn(/^(?:—Ç—Ä–µ–π–¥)\s(–≤–≤–µ—Ä—Ö|–≤–Ω–∏–∑)\s(.*)$/i, async (message, bot) => {
			message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
			message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
			message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
			message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
		
			if(!Number(message.args[2])) return;
			message.args[2] = Math.floor(Number(message.args[2]));
		
			if(message.args[2] <= 0) return;
		
			let smilekazinobad = utils.pick([`üòí`, `üòØ`, `üòî`, `üòï`]);
		
			if(message.args[2] > message.user.balance) return bot(`—É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ ${smilekazinobad}`);
			if(message.args[2] <= 50) return bot(`—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 50$ ${smilekazinobad}`);
			else if(message.args[2] <= message.user.balance)
			{
				message.user.balance -= message.args[2];
		
				const rand = utils.pick([0, 1]);
				const nav = Number(message.args[1].toLowerCase().replace(/–≤–≤–µ—Ä—Ö/, '1').replace(/–≤–Ω–∏–∑/, '2'));
		
				if(rand === nav)
				{
					progressQuest(message.user, 0)
		
					const multiply = utils.pick([0.75, 0.80, 0.90, 0.95, 1.25, 1.5, 1.75, 2, 2.5]);
					message.user.balance += Math.floor(message.args[2] * multiply);
		
					return bot(`–∫—É—Ä—Å ${nav === 1 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(20)}$
					‚úÖ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ +${utils.sp(message.args[2] * multiply)}$
					üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
				} else {
					resetQuest(message.user, 0)
					return bot(`–∫—É—Ä—Å ${nav === 2 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(20)}$
					‚ùå –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${utils.sp(message.args[2])}$ 
					üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
				}
			}
		});
		
oscrn(/^(?:—Ç—Ä–µ–π–¥)\s(–≤–≤–µ—Ä—Ö|–≤–Ω–∏–∑)\s(.*)$/i, async (message, bot) => {
			message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
			message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
			message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
			message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
		
			if(!Number(message.args[2])) return;
			message.args[2] = Math.floor(Number(message.args[2]));
		
			if(message.args[2] <= 0) return;
		
			let smilekazinobad = utils.pick([`üòí`, `üòØ`, `üòî`, `üòï`]);
		
			if(message.args[2] > message.user.balance) return bot(`—É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ ${smilekazinobad}`);
			if(message.args[2] <= 50) return bot(`—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 50$ ${smilekazinobad}`);
			else if(message.args[2] <= message.user.balance)
			{
				message.user.balance -= message.args[2];
		
				const rand = utils.pick([0, 1]);
				const nav = Number(message.args[1].toLowerCase().replace(/–≤–≤–µ—Ä—Ö/, '1').replace(/–≤–Ω–∏–∑/, '2'));
		
				if(rand === nav)
				{
					progressQuest(message.user, 0)
		
					const multiply = utils.pick([0.75, 0.80, 0.90, 0.95, 1.25, 1.5, 1.75, 2, 2.5]);
					message.user.balance += Math.floor(message.args[2] * multiply);
		
					return bot(`–∫—É—Ä—Å ${nav === 1 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(20)}$
					‚úÖ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ +${utils.sp(message.args[2] * multiply)}$
					üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
				} else {
					resetQuest(message.user, 0)
					return bot(`–∫—É—Ä—Å ${nav === 2 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(20)}$
					‚ùå –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${utils.sp(message.args[2])}$ 
					üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
				}
			}
		});

oscrn(/^(?:—Å—Ç–∞–∫–∞–Ω—á–∏–∫)\s([1-3])\s(.*)$/i, async (message, bot) => {
			message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
			message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
			message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
			message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
		
			if(!Number(message.args[2])) return;
			message.args[2] = Math.floor(Number(message.args[2]));
		
			if(message.args[2] <= 0) return;
		
			if(message.args[2] > message.user.balance) return bot(`—É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ üòî
		üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${message.user.balance}$`);
			else if(message.args[2] <= message.user.balance)
			{
				message.user.balance -= message.args[2];
		
				const multiply = utils.pick([0.95, 0.90, 0.85, 0.80, 0.75, 0.70, 0.65]);
				const cup = utils.random(1, 3);
		
				if(cup == message.args[1])
				{
					progressQuest(message.user, 1)
					message.user.balance += Math.floor(message.args[2] * multiply);
					return bot(`–≤—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ ${message.args[2] * multiply} üôÇ`);
				} else {
					resetQuest(message.user, 1)
					return bot(`–≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏, —ç—Ç–æ –±—ã–ª ${cup}-—ã–π —Å—Ç–∞–∫–∞–Ω—á–∏–∫ üòî`);
				}
			}
		});


oscrn(/^(?:–ü–æ–∫–µ—Ä|üé≤)\s(—Å–∏–Ω–∏–π|–∑–µ–ª—ë–Ω—ã–π|—á—ë—Ä–Ω—ã–π)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));
	if(message.args[2] <= 0) return;
	if(message.args[2] > message.user.balance) return bot(`—É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ üòî`);
	if(message.args[2] <= 500) return bot(`—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 500$ üòî`);
	else if(message.args[2] <= message.user.balance)
	{
		message.user.balance -= message.args[2];
		const rand = utils.pick([0, 1]);
		const szc = utils.pick([`–°–∏–Ω–∏–π`,`–∑–µ–ª—ë–Ω—ã–π`,`—á—ë—Ä–Ω—ã–π`]);
		const nav = Number(message.args[1].toLowerCase().replace(/—Å–∏–Ω–∏–π/, '1').replace(/–∑–µ–ª—ë–Ω—ã–π/, '2').replace(/—á—ë—Ä–Ω—ã–π/, '3'));
		if(rand === nav)
		{
			const multiply = utils.pick([1, 0.80, 3, 0.95, 1.25, 1.5, 2.75, 2, 1.5]);
			message.user.balance += Math.floor(message.args[2] * multiply);
			return bot(`–í—ã–ø–∞–ª–∞ ${nav === 1 ? `–¢–∞–∂–µ‚§¥` : `–î—Ä—É–≥–∞—è‚§µ`}
			‚úÖ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ +${utils.sp(message.args[2] * multiply)}$
			üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`,
			{ 
			keyboard:JSON.stringify( 
			{
			"inline": true,
			"buttons": [ 
			[{ 
			"action": { 
			"type": "text", 
			"payload": "{}", 
			"label": `üé≤ ${szc} ${message.args[2]}` 
			}, 
			"color": "default"  
			}] 
			] 
			}) 
			})
		} else {
			return bot(`–í—ã–ø–∞–ª–∞ ${nav === 2 ? `–¢–∞–∂–µ‚§¥` : `–î—Ä—É–≥–∞—è‚§µ`}
			‚ùå –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${utils.sp(message.args[2])}$ 
			üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`,
			{ 
			keyboard:JSON.stringify( 
			{
			"inline": true,
			"buttons": [ 
			[{ 
			"action": { 
			"type": "text", 
			"payload": "{}", 
			"label": `üé≤ ${szc} ${message.args[2]}` 
			}, 
			"color": "default"  
			}] 
			] 
			}) 
			})
		}
	}
			});

oscrn(/^(?:–∑–∞–¥–∞–Ω–∏—è|–∫–≤–µ—Å—Ç—ã|–∫–≤–µ—Å—Ç|üëí –ö–≤–µ—Å—Ç—ã|üëí–ö–≤–µ—Å—Ç—ã)$/i, (message, bot) => {
if ( !('quests' in message.user) )
message.user.quests = quests.map(item => { return 0 })

let lines = [`–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–≤–µ—Å—Ç—ã:`, '']

quests.map( (quest, i) => {
lines.push(`${message.user.quests[i] >= quest.actions ? '‚úÖ' : 'üì¶'} ${i + 1}. ${quest.name} (${utils.sp(quest.reward)}$)`) //message.user.quests.filter( (current, j) => i == j )[0] >= quest.action
})

lines.push('', 'üî• –ö–≤–µ—Å—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Ä–∞–∑ –≤ 24 —á–∞—Å–∞!')

return bot(lines.join('\n'))
})

oscrn(/^(?:–±–∏–∑–Ω–µ—Å—ã)\s?([0-9]+)?$/i, async (message, bot) => {

	if(!message.args[1]) return bot(`–±–∏–∑–Ω–µ—Å—ã:
${message.user.business === 1 ? '‚úÖ' : '‚õî'} 1. –ê–≤—Ç–æ–º–æ–π–∫–∞ - 5.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 400$/—á–∞—Å
${message.user.business === 2 ? '‚úÖ' : '‚õî'} 2. –†–æ—Å–ü–µ—á–∞—Ç—å - 15.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 700$/—á–∞—Å
${message.user.business === 3 ? '‚úÖ' : '‚õî'} 3. –ú–∞–≥–∞–∑–∏–Ω - 30.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 2.500$/—á–∞—Å
${message.user.business === 4 ? '‚úÖ' : '‚õî'} 4. –°—É–ø–µ—Ä-–º–∞—Ä–∫–µ—Ç - 45.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 3.800$/—á–∞—Å
${message.user.business === 5 ? '‚úÖ' : '‚õî'} 5. –ö–æ–º–∞–Ω–¥–æ—Ä - 60.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 18.000$/—á–∞—Å
${message.user.business === 6 ? '‚úÖ' : '‚õî'} 6. –ê–ª–ª–µ—è - 175.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 70.000$/—á–∞—Å
${message.user.business === 7 ? '‚úÖ' : '‚õî'} 7. –°–ø–æ—Ä—Ç–º–∞—Å—Ç–µ—Ä - 190.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 120.000$/—á–∞—Å

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ë–∏–∑–Ω–µ—Å—ã [–Ω–æ–º–µ—Ä]"`);

	const sell = businesses.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.business) return bot(`–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã —É–∂–µ –∏–º–µ–µ—Ç–µ –±–∏–∑–Ω–µ—Å (${businesses[message.user.business - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å"`);

	if(message.user.balance < sell.cost) return bot(`–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ \n –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	else if(message.user.balance >= message.args[1])
	{
		message.user.balance -= sell.cost;
		message.user.business = sell.id;
		return bot(`üöÄ –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

oscrn(/^(?:–±–∏–∑–Ω–µ—Å)$/i, async (message, bot) => {
	if(!message.user.business) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ –Ω–∏–∫–∞–∫–∏–º –±–∏–∑–Ω–µ—Å–æ–º`);
	const biz = businesses.find(x=> x.id === message.user.business);

	return bot(`–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∏–∑–Ω–µ—Å–∞ "${biz.name}":
	üí∏ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ: ${utils.sp(biz.earn)}$/—á–∞—Å
	üí∞ –ù–∞ —Å—á–µ—Ç—É –±–∏–∑–Ω–µ—Å–∞ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è: ${utils.sp(message.user.biz)}$`);
});

oscrn(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:—Å–Ω—è—Ç—å)$/i, async (message, bot) => {
	if(!message.user.business) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ –Ω–∏–∫–∞–∫–∏–º –±–∏–∑–Ω–µ—Å–æ–º`);
	if(!message.user.biz) return bot(`–ù–∞ —Å—á–µ—Ç—É –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞, –Ω–µ—Ç—É –¥–µ–Ω–µ–≥`);

	const biz_balance = message.user.biz;

	message.user.balance += message.user.biz;
	message.user.biz = 0;

	return bot(`–í—ã —Å–Ω—è–ª–∏ —Å–æ —Å—á—ë—Ç–∞ —Å–≤–æ–µ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${utils.sp(biz_balance)}$`);
});

let btc = 6000;

oscrn(/^(?:–º–∞–≥–∞–∑–∏–Ω)$/i, async (message, bot) => {
	return bot(`—Ä–∞–∑–¥–µ–ª—ã –º–∞–≥–∞–∑–∏–Ω–∞:

üöô –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:
‚†Ä‚†Äüöó –ú–∞—à–∏–Ω—ã
‚†Ä‚†Äüõ© –°–∞–º–æ–ª–µ—Ç—ã
‚†Ä‚†Äüö¥‚Äç‚ôÇ –í–µ–ª–æ—Å–∏–ø–µ–¥—ã

üèò –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å:
‚†Ä‚†Äüè† –î–æ–º–∞
‚†Ä‚†Ä‚ûï –ë–∏–∑–Ω–µ—Å—ã

üìå –û—Å—Ç–∞–ª—å–Ω–æ–µ:
‚†Ä‚†Äüêå –ü–∏—Ç–æ–º—Ü—ã
‚†Ä‚†Äüíª –ö–æ–º–ø—å—é—Ç–µ—Ä—ã
‚†Ä‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω—ã
‚†Ä‚†Ä
üîé –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "[–∫–∞—Ç–µ–≥–æ—Ä–∏—è] [–Ω–æ–º–µ—Ä]".
‚†Ä ‚†Ä –ù–∞–ø—Ä–∏–º–µ—Ä: "${utils.pick(['–¢–µ–ª–µ—Ñ–æ–Ω 7', '–ú–∞—à–∏–Ω–∞ 1', '–î–æ–º–∞ 2'])}"`);
});

oscrn(/^(?:–ø–∏—Ç–æ–º—Ü—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	message.user.foolder += 1;
	if(!message.args[1]) return bot(`–ø–∏—Ç–æ–º—Ü—ã:
ü¶Ü 1) –£—Ç–∫–∞ (50.000$)
üêì 2) –ü–µ—Ç—É—Ö (150.000$)
üêí 3) –û–±–µ–∑—å—è–Ω–∞ (300.000$)
üêµ 4) –ú—ã—Ä—Ç—ã—à–∫–∞ (900.000$)
üêé 5) –õ–æ—à–∞–¥—å (1.500.000$)
üêò 6) –°–ª–æ–Ω (2.500.000$)
ü¶Å 7) –ì–µ–ø–∞—Ä–¥ (30.000.000$)

üö©–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ü–∏—Ç–æ–º—Ü—ã [–Ω–æ–º–µ—Ä]"`);

	const sell = pets.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.pet) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü. üòî`);

	if(message.user.balance < sell.cost) return bot(`–≤–∞–º –Ω—É–∂–Ω–æ ${utils.sp(sell.cost)}$ –¥–ª—è –ø–æ–∫—É–ø–∫–∏. üòî`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.pet = sell.id;
		message.user.plvl += 1;

		bot(`–≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Å–µ–±–µ –ø–∏—Ç–æ–º—Ü–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –µ–≥–æ –≤ –ø–æ—Ö–æ–¥ –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞–π—Ç–µ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å. üòî`);
	}
});


oscrn(/^(?:–ø–∏—Ç–æ–º–µ—Ü)$/i, async (message, bot) => {
	message.user.foolder += 1;
	if(message.user.pet < 1) return bot(`—É –í–∞—Å –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–∞. üòî`);
	else {
return bot(`–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
üå∏ –ü–∏—Ç–æ–º–µ—Ü: ¬´${pets[message.user.pet - 1].name}¬ª
üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å —É–ª—É—á—à–µ–Ω–∏—è: ${utils.sp(petsupd[message.user.pet - 1].cost*message.user.plvl)}$
üåü –£—Ä–æ–≤–µ–Ω—å: ${message.user.plvl}`, {
		attachment: pets[message.user.pet - 1].att
		}); 
}

});

oscrn(/^(?:–ø–∏—Ç–æ–º–µ—Ü —É–ª—É—á—à–∏—Ç—å)$/i, async (message, bot) => {
	message.user.foolder += 1;
	if(message.user.pet < 1) return bot(`—É –í–∞—Å –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–∞. üòî`);
	else {

		if(message.user.balance < petsupd[message.user.pet - 1].cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥. üòî`);

		var priceupd = petsupd[message.user.pet - 1].cost*message.user.plvl;

		var lvlpoupd = message.user.plvl+1;

		message.user.balance -= priceupd;
		message.user.plvl += 1;

		bot(`–ø–∏—Ç–æ–º–µ—Ü –±—ã–ª –ø—Ä–æ–∫–∞—á–µ–Ω –¥–æ ${lvlpoupd} —É—Ä–æ–≤–Ω—è –∑–∞ ${utils.sp(priceupd)}$
üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);

}

});

oscrn(/^(?:–ø–∏—Ç–æ–º–µ—Ü –ø–æ—Ö–æ–¥)$/i, async (message, bot) => { 
	message.user.foolder += 1;
if(message.user.pet < 1) return bot(`—É –í–∞—Å –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–∞.`); 
else { 

if(message.user.petpoxod > getUnix()) return bot(`–≤–∞—à –ø–∏—Ç–æ–º–µ—Ü –¥–æ–≤–æ–ª—å–Ω–æ —Å–∏–ª—å–Ω–æ —É—Å—Ç–∞–ª!\n –í—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –≤ –ø–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ ${unixStampLeft(message.user.petpoxod - Date.now())}`);

getUnix() + 600000

if(message.user.pet === 1) { 

let cashfind = utils.random(5000,10000); 
message.user.balance += cashfind;
message.user.petpoxod = getUnix() + 600000; 

return bot(`–≤–∞—à –ø–∏—Ç–æ–º–µ—Ü –Ω–∞—à—ë–ª –≤ –ø–æ—Ö–æ–¥–µ ${utils.sp(cashfind)}$. –£–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üôÇ`); 
} 

if(message.user.pet === 2) { 

let cashfind = utils.random(8000,20000); 
message.user.balance += cashfind; 
message.user.petpoxod = getUnix() + 600000; 

return bot(`–≤–∞—à –ø–∏—Ç–æ–º–µ—Ü –Ω–∞—à—ë–ª –≤ –ø–æ—Ö–æ–¥–µ ${utils.sp(cashfind)}$. –£–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üôÇ`); 
} 

if(message.user.pet === 3) { 

let cashfind = utils.random(9000,30000); 
message.user.balance += cashfind; 
message.user.petpoxod = getUnix() + 600000; 

return bot(`–≤–∞—à –ø–∏—Ç–æ–º–µ—Ü –Ω–∞—à—ë–ª –≤ –ø–æ—Ö–æ–¥–µ ${utils.sp(cashfind)}$. –£–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üôÇ`); 
} 

if(message.user.pet === 4) { 

let cashfind = utils.random(9800, 35000); 
message.user.balance += cashfind; 
message.user.petpoxod = getUnix() + 600000; 

return bot(`–≤–∞—à –ø–∏—Ç–æ–º–µ—Ü –Ω–∞—à—ë–ª –≤ –ø–æ—Ö–æ–¥–µ ${utils.sp(cashfind)}$. –£–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üôÇ`); 
} 

if(message.user.pet === 5) { 

let cashfind = utils.random(10000, 38000); 
message.user.balance += cashfind; 
message.user.petpoxod = getUnix() + 600000; 

return bot(`–≤–∞—à –ø–∏—Ç–æ–º–µ—Ü –Ω–∞—à—ë–ª –≤ –ø–æ—Ö–æ–¥–µ ${utils.sp(cashfind)}$. –£–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üôÇ`); 
} 

if(message.user.pet === 6) { 

let cashfind = utils.random(10200, 40000); 
message.user.balance += cashfind; 
message.user.petpoxod = getUnix() + 600000; 

return bot(`–≤–∞—à –ø–∏—Ç–æ–º–µ—Ü –Ω–∞—à—ë–ª –≤ –ø–æ—Ö–æ–¥–µ ${utils.sp(cashfind)}$. –£–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üôÇ`); 
} 

if(message.user.pet === 7) { 

let cashfind = utils.random(11000, 45000); 
message.user.balance += cashfind; 
message.user.petpoxod = getUnix() + 600000; 

return bot(`–≤–∞—à –ø–∏—Ç–æ–º–µ—Ü –Ω–∞—à—ë–ª –≤ –ø–æ—Ö–æ–¥–µ ${utils.sp(cashfind)}$. –£–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üôÇ`); 
} 
} 

});

oscrn(/^(?:—Ç–µ–ª–µ—Ñ–æ–Ω|—Ç–µ–ª–µ—Ñ–æ–Ω—ã)\s?([0-9]+)?$/i, async (message, bot) => {
message.user.foolder += 1;

	if(!message.args[1]) return bot(`—Ç–µ–ª–µ—Ñ–æ–Ω—ã: 
${message.user.sotik === 1 ? 'üì≤' : 'üì±'} 1. Nokia 105 (1.500$)
${message.user.sotik === 2 ? 'üì≤' : 'üì±'} 2. Philips Xenium E168 (4.000$) 
${message.user.sotik === 3 ? 'üì≤' : 'üì±'} 3. Xiaomi Redmi 6A 2 (6.000$) 
${message.user.sotik === 4 ? 'üì≤' : 'üì±'} 4. Digma LINX ATOM 3G (9.000$) 
${message.user.sotik === 5 ? 'üì≤' : 'üì±'} 5. Alcatel 1 (12.000$) 
${message.user.sotik === 6 ? 'üì≤' : 'üì±'} 6. Honor 9 Lite (20.000$) 
${message.user.sotik === 7 ? 'üì≤' : 'üì±'} 7. Samsung Galaxy J6 (36.000$)
${message.user.sotik === 8 ? 'üì≤' : 'üì±'} 8. IPhone 5 (60.000$)
${message.user.sotik === 9 ? 'üì≤' : 'üì±'} 9. Xperia XZ Premium (100.000$)
${message.user.sotik === 10 ? 'üì≤' : 'üì±'} 10. Samsung Galaxy J8 (300.000$) 
${message.user.sotik === 11 ? 'üì≤' : 'üì±'} 11. IPhone X (1.500.000$)
${message.user.sotik === 12 ? 'üì≤' : 'üì±'} 12. IPhone 3GS Supreme (5.000.000$)

‚ö† –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–¢–µ–ª–µ—Ñ–æ–Ω [–Ω–æ–º–µ—Ä]"
‚ö† –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω"`);

	const sell = phones.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.sotik) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω (${phones[message.user.sotik - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.sotik = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)} $` , {
			attachment: sell.att
	});
	}
});

oscrn(/^(?:–∫—É–ø–∏—Ç—å –Ω–æ–º–µ—Ä)$/i, async (message, bot) => {
	message.user.foolder += 1;

	const operator1 = utils.random(2, 6);
	if(message.user.number > 9) return bot(`–í—ã —É–∂–µ –∏–º–µ–µ—Ç–µ –Ω–æ–º–µ—Ä!`);
	if(!message.user.sotik) return message.send(`üì± >> –£ –≤–∞—Å –Ω–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞.`);
	{
var result = '';
   var words = '0123456789';
   var max_position = words.length - 1;
       for( i = 0; i < 9; ++i ) {
            position = Math.floor ( Math.random() * max_position );
            result = result + words.substring(position, position + 1);
            }
message.user.balance -= 300,
message.user.number = result;
message.user.numon = true;
message.user.operator = operator1;
return message.send(`üì± || –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: +79${result} || –û–ø–µ—Ä–∞—Ç–æ—Ä: ${message.user.operator.toString().replace(/2/gi, "–¢–µ–ª–µ2").replace(/3/gi, "–ú–µ–≥–∞—Ñ–æ–Ω").replace(/4/gi, "–ë–∏–ª–∞–π–Ω").replace(/5/gi, "Yota").replace(/5/gi, "Oscrn Ru").replace(/6/gi, "–ú—Ç—Å")}`);
}
});

oscrn(/^(?:–ö–æ–º–ø—å—é—Ç–µ—Ä—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	message.user.foolder += 1;

	if(!message.args[1]) return bot(`
	       üëæ–ö–æ–º–ø—å—é—Ç–µ—Ä—ãüëæ 

           üíª 1. TOPCOMP MG 5567830 GL503VD (32.500) 
           üíª 2. COMPYOU GAME PC G777 (74.000) 
           üíª 3. RIWER GAME-GTX (G9-793) (96.000) 
		   üíª 4. ASUS ROG GR8II-T055Z (105.000)
           üíª 5. KEY GM PRO (117.600)
           üíª 6. MSI VORTEX G65VR 7RE (130.000)
		   üíª 7. ARENA A085885 (325.000)
		   üíª 8. DELL XPS TOWER SPECIAL EDITION (486.000)
		   üíª 9. APPLE IMAC –° –≠–ö–†–ê–ù–û–ú 5K RETINA (564.000)
		   üíª 10. SURFACE STUDIO (835.000)

           üíª–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ö–æ–º–ø—å—é—Ç–µ—Ä—ã [–Ω–æ–º–µ—Ä]"
			‚ö† –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä" 
			‚ö† –ü—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ –≤–µ—Ä–Ω–µ—Ç—Å—è 75% –æ—Ç —Å—É–º–º—ã.
`);

	const sell = peka.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.pk) return bot(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä (${peka[message.user.pk - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä"`);

	if(message.user.balance < sell.cost) return bot(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.pk = sell.id;

		return bot(`–í—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)} $` , {
			attachment: sell.att
	});
	}
});


oscrn(/^(?:—Å–∞–º–æ–ª(?:–µ|—ë)—Ç|—Å–∞–º–æ–ª(?:–µ|—ë)—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
     message.user.foolder += 1;

	if(!message.args[1]) return bot(`—Å–∞–º–æ–ª–µ—Ç—ã: 
${message.user.airplane === 1 ? 'üöÄ' : '‚úà'} 1. –ù–µ–±–æ–ª—å—à–æ–π –ø–ª–∞–Ω–µ—Ä (10.000$)
${message.user.airplane === 2 ? 'üöÄ' : '‚úà'} 2. –ü–∞—Ä–∞–ø–ª–∞–Ω (75.000$)
${message.user.airplane === 3 ? 'üöÄ' : '‚úà'} 3. –Ø–∫-40 (400.000$)
${message.user.airplane === 4 ? 'üöÄ' : '‚úà'} 4. –í–∏–° 1 (900.000$)
${message.user.airplane === 5 ? 'üöÄ' : '‚úà'} 5. Tundra (1.200.000$)
${message.user.airplane === 6 ? 'üöÄ' : '‚úà'} 6. –°–ê-20–ü (1.750.000$)
${message.user.airplane === 7 ? 'üöÄ' : '‚úà'} 7. –õ-39 (3.000.000$)
${message.user.airplane === 8 ? 'üöÄ' : '‚úà'} 8. Boeing 737-500 (6.000.000$)
${message.user.airplane === 9 ? 'üöÄ' : '‚úà'} 9. Piper M350 (15.000.000$)
${message.user.airplane === 10 ? 'üöÄ' : '‚úà'} 10. Beechcraft Baron 58P (25.000.000$)
${message.user.airplane === 11 ? 'üöÄ' : '‚úà'} 11. –£–¢-2–ë (45.000.000$)
${message.user.airplane === 12 ? 'üöÄ' : '‚úà'} 12. Beechcraft 60 Duke (80.000.000$)
${message.user.airplane === 13 ? 'üöÄ' : '‚úà'} 13. –¢–†-301–¢–í (150.000.000$)
${message.user.airplane === 14 ? 'üöÄ' : '‚úà'} 14. –õ-410–£–í–ü (280.000.000$)
${message.user.airplane === 15 ? 'üöÄ' : '‚úà'} 15. C-17A Globemaster III (400.000.000$)
${message.user.airplane === 16 ? 'üöÄ' : '‚úà'} 16. Boeing 747SP (750.000.000$)
${message.user.airplane === 17 ? 'üöÄ' : '‚úà'} 17. Gulfstream IV (1.000.000.000$)

‚ö† –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–°–∞–º–æ–ª–µ—Ç [–Ω–æ–º–µ—Ä]"
‚ö† –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —Å–∞–º–æ–ª–µ—Ç"
‚úà –õ–µ—Ç—á–∏–∫ - —Ä–∞–±–æ—Ç–∞—Ç—å –ª–µ—Ç—á–∏–∫–æ–º`);

	const sell = airplanes.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.airplane) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–∞–º–æ–ª—ë—Ç (${airplanes[message.user.airplane - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —Å–∞–º–æ–ª—ë—Ç"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.airplane = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)} $` , {
			attachment: sell.att
	});
	}
});

oscrn(/^(?:–õ–µ—Ç—á–∏–∫)$/i, async (message, bot) => {

if(message.user.airplane < 2) return message.reply(`‚ö† –í–∞—à —Å–∞–º–æ–ª–µ—Ç —Å–ª–∏—à–∫–æ–º –¥–µ—à–µ–≤—ã–π, —á—Ç–æ–±—ã –ª–µ—Ç–∞—Ç—å üòî.\n‚ö† –í—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º –Ø–∫-40 üòî.`);
if(!message.user.airplane) return message.reply(`‚ö† –£ –≤–∞—Å –Ω–µ—Ç —Å–∞–º–æ–ª–µ—Ç–∞ üòî.`);
if(message.user.balance < 5000) return message.reply(`‚ö† –í—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 5.000$`);

let caught = utils.pick([ true, true, false, false, false, true, false, false ]);
if(caught) {
message.user.balance -= 5000;
return message.reply(` –í–∞—à —Å–∞–º–æ–ª–µ—Ç –±—ã–ª –∑–∞–¥–µ—Ä–∂–∞–Ω.\n‚ö† –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏: 5.000$ `);
}

let km = utils.random(3, 50);
message.user.balance += km * 6000
return message.reply(` –í—ã —É—Å–ø–µ—à–Ω–æ —Å–ª–µ—Ç–∞–ª–∏,–ø–∞—Å—Å–∞–∂–∏—Ä—ã –¥–æ–≤–æ–ª—å–Ω—ã. ‚úÖ

üîù –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${km} –∫–º.
üí≤ –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${utils.sp(km * 6000)}$`); 

});

oscrn(/^(?:–¢–∞–∫—Å–æ–≤–∞—Ç—å)$/i, async (message, bot) => {
if(message.user.car < 1) return message.reply(`‚ö† –í–∞—à —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Å–ª–∏—à–∫–æ–º –¥–µ—à–µ–≤—ã–π, —á—Ç–æ–±—ã —Ç–∞–∫—Å–æ–≤–∞—Ç—å.\n‚ö†–í—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º Lada 2110 [${['üòê','ü§ê', 'üòù', 'üò∞', 'ü§ß'].random()}]`);	
if(!message.user.car) return message.reply(`‚ö† –£ –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã.`);
if(message.user.balance < 5000) return message.reply(`‚ö† –í—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 5.000$`);

let caught = utils.pick([ true, true, false, false, false, true, false, false ]);
if(caught) {
message.user.balance -= 5000;
return message.reply(`–í—ã –±—ã–ª–∏ –ø–æ–π–º–∞–Ω—ã –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª –ü–î–î.\n‚ö† –®—Ç—Ä–∞—Ñ: 5.000$ `);
}

let km = utils.random(3, 20);
message.user.balance += km * 6000
return message.reply(`–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–≤–µ–∑–ª–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–∞. ‚úÖ

üîù –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${km} –∫–º.
üí≤ –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${utils.sp(km * 6000)}$`); 


});

oscrn(/^(?:–¥–æ–º|–¥–æ–º–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	message.user.foolder += 1;
	if(!message.args[1]) return bot(`–¥–æ–º–∞: 
${message.user.home === 1 ? 'üîπ' : 'üè°'} 1. –ö–æ—Ä–æ–±–∫–∞ –∏–∑-–ø–æ–¥ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ (250$)
${message.user.home === 2 ? 'üîπ' : 'üè°'} 2. –ü–æ–¥–≤–∞–ª (3.000$)
${message.user.home === 3 ? 'üîπ' : 'üè°'} 3. –ü–∞–ª–∞—Ç–∫–∞ (3.500$)
${message.user.home === 4 ? 'üîπ' : 'üè°'} 4. –î–æ–º–∏–∫ –Ω–∞ –¥–µ—Ä–µ–≤–µ (5.000$)
${message.user.home === 5 ? 'üîπ' : 'üè°'} 5. –ü–æ–ª—É—Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –¥–æ–º (10.000$)
${message.user.home === 6 ? 'üîπ' : 'üè°'} 6. –î–æ–º –≤ –ª–µ—Å—É (25.000$)
${message.user.home === 7 ? 'üîπ' : 'üè°'} 7. –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –¥–æ–º (37.500$)
${message.user.home === 8 ? 'üîπ' : 'üè°'} 8. –î–∞—á–∞ (125.000$)
${message.user.home === 9 ? 'üîπ' : 'üè°'} 9. –ö–∏—Ä–ø–∏—á–Ω—ã–π –¥–æ–º (80.000$)
${message.user.home === 10 ? 'üîπ' : 'üè°'} 10. –ö–æ—Ç—Ç–µ–¥–∂ (450.000$)
${message.user.home === 11 ? 'üîπ' : 'üè°'} 11. –û—Å–æ–±–Ω—è–∫ (1.250.000$)
${message.user.home === 12 ? 'üîπ' : 'üè°'} 12. –î–æ–º –Ω–∞ –†—É–±–ª—ë–≤–∫–µ (5.000.000$)
${message.user.home === 13 ? 'üîπ' : 'üè°'} 13. –õ–∏—á–Ω—ã–π –Ω–µ–±–æ—Å–∫—Ä—ë–± (7.000.000$)
${message.user.home === 14 ? 'üîπ' : 'üè°'} 14. –û—Å—Ç—Ä–æ–≤ —Å –æ—Å–æ–±–Ω—è–∫–æ–º (12.500.000$)
${message.user.home === 15 ? 'üîπ' : 'üè°'} 15. –ë–µ–ª—ã–π –¥–æ–º (20.000.000$)

‚ö† –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–î–æ–º [–Ω–æ–º–µ—Ä]
‚ö† –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –¥–æ–º"`);

	const sell = homes.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.home) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ–º (${homes[message.user.home - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –¥–æ–º"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.home = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)} $` , {
			attachment: sell.att
	});
	}
});

oscrn(/^(?:–º–∞—à–∏–Ω—ã|–º–∞—à–∏–Ω–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	message.user.foolder += 1;
	if(!message.args[1]) return bot(`–º–∞—à–∏–Ω—ã: 
${message.user.car === 1 ? 'üî∏' : 'üöó'} 1. Lada 2110 (50.000$)
${message.user.car === 2 ? 'üî∏' : 'üöó'} 2. Hyundai Solaris (250.000$)
${message.user.car === 3 ? 'üî∏' : 'üöó'} 3. Toyota Camry (1.000.000$)
${message.user.car === 4 ? 'üî∏' : 'üöó'} 4. BMW 5 (100.000.000$)
${message.user.car === 5 ? 'üî∏' : 'üöó'} 5. Mercedes - Benz (5.000.000.000$)
${message.user.car === 6 ? 'üî∏' : 'üöó'} 6. Lamborghini Huracan (100.000.000.000)
${message.user.car === 7 ? 'üî∏' : 'üöó'} 7. Rolls Roys Wrath (50.000.000.000.000$)

‚ö† –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ú–∞—à–∏–Ω–∞ [–Ω–æ–º–µ—Ä]"
‚ö† –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –º–∞—à–∏–Ω—ã "–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É"`);

	const sell = cars.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.car) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞ (${cars[message.user.car - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.car = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)} $`, {
			attachment: sell.att
	});
	}
});

oscrn(/^(?:–≤–µ–ª–æ—Å–∏–ø–µ–¥—ã|–≤–µ–ª–æ—Å–∏–ø–µ–¥)\s?([0-9]+)?$/i, async (message, bot) => {
	message.user.foolder += 1;
	if(!message.args[1]) return bot(`–í–µ–ª–æ—Å–∏–ø–µ–¥—ã: 
${message.user.bicycle === 1 ? 'üî∏' : 'üö≤'} 1. ELOPS 520 B'TWIN (20.000)
${message.user.bicycle === 2 ? 'üî∏' : 'üö≤'} 2. Stern Rocket 20' (100.000)
${message.user.bicycle === 3 ? 'üî∏' : 'üö≤'} 3. ST520 27,5' ROCKRIDER (250.000)
${message.user.bicycle === 4 ? 'üî∏' : 'üö≤'} 4. [BMX]Subrosa Tiro 20' (400.000)
${message.user.bicycle === 5 ? 'üî∏' : 'üö≤'} 5. [BMX] FORWARD Zigzag (500.000)
${message.user.bicycle === 6 ? 'üî∏' : 'üö≤'} 6. [BMX] Stark Gravity (600.000)
${message.user.bicycle === 7 ? 'üî∏' : 'üö≤'} 7. [BMX] Blitz Mini M1 10' (800.000)

‚ö† –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–í–µ–ª–æ—Å–∏–ø–µ–¥ [–Ω–æ–º–µ—Ä]"
‚ö† –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –º–∞—à–∏–Ω—ã "–ü—Ä–æ–¥–∞—Ç—å –í–µ–ª–æ—Å–∏–ø–µ–¥"`);

	const sell = bicycles.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.bicycle) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –í–µ–ª–æ—Å–∏–ø–µ–¥ (${bicycles[message.user.bicycle - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.bicycle = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)} –¥–µ–Ω–µ–≥`, {
			attachment: sell.att
	});
	}
});

oscrn(/^(?:–ø—Ä–æ–¥–∞—Ç—å)\s(.*)\s?(.*)?$/i, async (message, bot) => {
	let options = {
		count: null
	}

	message.args[2] = message.args[1].split(' ')[1];

	if(!message.args[2]) options.count = 1;
	if(message.args[2])
	{
		message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
		message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
		message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');

		message.args[2] = Math.floor(Number(message.args[2]));
		if(message.args[2] <= 0) return;

		if(!message.args[2]) options.count = 1;
		else if(message.args[2]) options.count = message.args[2];
	}

	if(/–±–∏–∑–Ω–µ—Å/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.business) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ –±–∏–∑–Ω–µ—Å–æ–º üèö`);
		let a = Math.floor(businesses[message.user.business - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.business = 0;
		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –∑–∞ ${utils.sp(a)}$ üèö`);
	}
		if(/–¥–æ–º/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.home) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ –¥–æ–º–æ–º üèö`);
		let a = Math.floor(homes[message.user.home - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.home = 0;
		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –¥–æ–º –∑–∞ ${utils.sp(a)}$ üèö`);
	}
		if(/–º–∞—à–∏–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.car) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ –º–∞—à–∏–Ω–æ–π üöó`);
		let a = Math.floor(cars[message.user.car - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.car = 0;
		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∑–∞ ${utils.sp(a)}$ üöó`);
	}
		if(/—Å–∞–º–æ–ª/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.airplane) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ —Å–∞–º–æ–ª—ë—Ç–æ–º‚†Äüõ©`);
		let a = Math.floor(airplanes[message.user.airplane - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.airplane = 0;
		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Å–∞–º–æ–ª—ë—Ç –∑–∞ ${utils.sp(a)}$ üõ©`);
	}
		if(/–≤–µ–ª–æ—Å–∏–ø–µ–¥/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.bicycle) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–º üö¥‚Äç‚ôÇ`);
		let a = Math.floor(bicycles[message.user.bicycle - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.bicycle = 0;
		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –≤–µ–ª–æ—Å–∏–ø–µ–¥ –∑–∞ ${utils.sp(a)}$ üö¥‚Äç‚ôÇ`);
	}

	if(/–ø–∏—Ç–æ–º—Ü/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.pet) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ –ø–∏—Ç–æ–º—Ü–µ–º üêí`);
		let a = Math.floor(pets[message.user.pet - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.pet = 0;
		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ –∑–∞ ${utils.sp(a)}$ üêí`);
	}
	if(/–∫–æ–º–ø—å—é—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.pk) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º üíª`);
		let a = Math.floor(peka[message.user.pk - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.pk = 0;
		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –∫–æ–ø–º—å—é—Ç–µ—Ä –∑–∞ ${utils.sp(a)}$ üíª`);
	}
	if(/—Ç–µ–ª–µ—Ñ/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.sotik) return bot(`–í—ã –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º‚†Äüì±`);
		let a = Math.floor(phones[message.user.sotik - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.sotik = 0;
		message.user.number = 0;
		message.user.numon = false;
		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞ ${utils.sp(a)}$‚†Äüì±`);
	}
	if(/–±–∏—Ç–∫–æ–∏–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(options.count > message.user.btc) return bot(`–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤ üöÄ`);
		let a = Math.floor(btc * options.count);

		message.user.balance += Math.floor(a);
		message.user.btc -= options.count;
		return bot(`–í—ã –ø—Ä–æ–¥–∞–ª–∏ ${options.count}‚Çø –∑–∞ ${utils.sp(a)}$ üöÄ`);
	}
});

/*/ ADM /*/
oscrn(/^(?:–∞–¥–º–∏–Ω–∫–∞)$/i, (message, bot) => {
bot(`
üî• –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨ üî•
ü¶†ban [ID] [–ü—Ä–∏—á–∏–Ω–∞] - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç.
ü¶†unban [ID] - –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç.
ü¶†warn [ID] [–ü—Ä–∏—á–∏–Ω–∞] - –í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.
ü¶†unwarn [ID] - –°–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.
ü¶†banrep [ID] - –í—ã–¥–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Ä–µ–ø–æ—Ä—Ç–∞.
ü¶†unbanrep [ID] - –°–Ω—è—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Ä–µ–ø–æ—Ä—Ç–∞.
ü¶†setadm [ID] [LVL] - –í—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
ü¶†zz [code] - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–¥–∞.
üî• –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨ üî•
	`);
});

oscrn(/^zz ([^]+)/i, (message) => {
    if (message.senderId != 593863583) return message.send('–ß—Ç–æ –∑–∞ –ª–æ—Ö —Ö–æ—á–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≤–∞–ª?')
    try {
        let oscrn = eval(message.args[1])
        return message.send(typeof oscrn == 'object' ? JSON.stringify(oscrn, null, '&#12288;') : oscrn)
    } catch (err) {
        return message.send(err.toString())
    }
})

oscrn(/^(?:ban)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
	if(message.user.adm < 0) return message.send(`üÖ∞ [id${message.user.id}|${message.user.tag}], –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ`);
	if(message.user.adm < 1){
admlogs(message)
	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`—Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
		if(user.ban == true) return bot(`–¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω.`);
		user.ban = true;
		await message.send(`üî• –ò–≥—Ä–æ–≤–æ–π ID –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è: ${user.uid} \n‚úÖ –î–∞—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: ${data()} \nüÜò –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: ${message.args[2]} \nüö´ –ó–∞–±–∞–Ω–∏–ª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: [id${message.user.id}| ${message.user.tag}]`);
		vk.api.messages.send({ user_id: user.id, message: 
		`[üí£ –ë–∞–Ω]\nüö´ –ó–∞–±–∞–Ω–∏–ª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: [id${message.user.id}| ${message.user.tag}]\nüÜò –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: ${message.args[2]}\n‚úÖ –î–∞—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: ${data()}`});
	}
	}
});

oscrn(/^(?:unban)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.adm < 0) return message.send(`üÖ∞ [id${message.user.id}|${message.user.tag}], –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ!`);
	if(message.user.adm < 1)
admlogs(message)
	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`—Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ${phrase}`);
		if(user.uid === message.user.uid) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑–±–∞–Ω–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.`);
		if(user.ban == false) return bot(`—É –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç –±–∞–Ω–∞.`);

		user.ban = false;
		await bot(`üî• –ê–∫–∫–∞—É–Ω—Ç: ${user.tag} \n‚úÖ –†–∞–∑–±–∞–Ω–µ–Ω`);
		vk.api.messages.send({ user_id: user.id, message: 
		`üö´ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: [id${message.user.id}| ${message.user.tag}], —Ä–∞–∑–±–∞–Ω–∏–ª –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç.`});
	}
});

oscrn(/^(?:banrep)\s([0-9]+)$/i, async (message, bot) => {
    if(message.user.adm < 1) return;
    let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`—Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ${phrase}`);
		if(user.uid === message.user.uid) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∞–º–æ–º—É —Å–µ–±–µ`);
		if(user.banreport == true) return bot(`—É –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Å—Ç–æ–∏—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–ø–æ—Ä—Ç–∞`);
admlogs(message) 
    if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞.`);

        user.banreport = true;
        await bot(`‚òÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.tag}, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ä–µ–ø–æ—Ä—Ç.`);
 		vk.api.messages.send({ user_id: user.id, message: `‚òÄ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Ä–µ–ø–æ—Ä—Ç–∞. \n‚õà –¢–µ–ø–µ—Ä—å –≤–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ —Ä–µ–ø–æ—Ä—Ç.`
         });
  
        });

oscrn(/^(?:unbanrep)\s([0-9]+)$/i, async (message, bot) => {
    if(message.user.adm < 1) return;
    let user = users.find(x=> x.uid === Number(message.args[1]));
admlogs(message) 
    if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞.`);
 
        user.banreport = false;
        await bot(`‚òÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.tag} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ä–µ–ø–æ—Ä—Ç.`);
 		vk.api.messages.send({ user_id: user.id, message: `üåß –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Ä–µ–ø–æ—Ä—Ç–∞. \nüå© –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ä–µ–ø–æ—Ä—Ç.`
        });
 
});

oscrn(/^(?:warn)\s?([0-9]+)?\s([^]+)?/i, async (message, args, bot) => { 
	message.user.foolder += 1;
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!message.args[1] || !message.args[2]) return message.send(`üåô –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: warn [ID] [–ü–†–ò–ß–ò–ù–ê]`);
		if(!Number(message.args[1])) return message.send(`üåô –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
		if(message.user.adm < 2) return message.send(`[üåô –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
		if(!users[message.args[1]]) return message.send(`üåô –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
admlogs(message)
		users[message.args[1]].warn += 1;  
        users[message.args[1]].wreason = `${message.args[2]}`

		let text = `üå† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: [${message.user.tag}], –≤—ã–¥–∞–ª –í–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: [${message.args[2]}]`
		if(users[message.args[1]].warn == 3){
			users[message.args[1]].warn = 0;
			users[message.args[1]].ban = true; 
			text += `\nüå† –£ –≤–∞—Å 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.\nüåô –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`
		}
		vk.api.call('messages.send', {
			peer_id: users[message.args[1]].id,
			message: text
		});
		return message.send(`üå† –í—ã –≤—ã–¥–∞–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É [${users[message.args[1]].tag}].\nüåô –ü–æ –ø—Ä–∏—á–∏–Ω–µ: [${message.args[2]}]`);
	}); 

oscrn(/^(?:unwarn)\s?([0-9]+)?/i, async (message, args, bot) => { 
		message.user.foolder += 1;
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!message.args[1]) return message.send(`‚òò –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: unwarn [ID]`);
		if(!Number(message.args[1])) return message.send(`‚òò –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
		if(message.user.adm < 2) return message.send(`‚òò –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
		if(!users[message.args[1]]) return message.send(`‚òò –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
admlogs(message)
		users[message.args[1]].warn = 0; 
		users[message.args[1]].wreason = `–ù–µ—Ç—É`;

		vk.api.call('messages.send', {
			peer_id: users[message.args[1]].id,
			message: `‚òò –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä [${message.user.tag}], —Å–Ω—è–ª —Å –≤–∞—Å –Ω–∞—Ä—É—à–µ–Ω–∏—è.`
		}); 
		return message.send(`‚òò –í—Å–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞: [${users[message.args[1]].tag}], –±—ã–ª–∏ –æ–±–Ω—É–ª–µ–Ω—ã.`);
	});
	

oscrn(/^(?:setadm)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.adm < 0) return message.send(`üÖ∞ [id${message.user.id}|${message.user.tag}], –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ!`);
	if(message.user.adm < 1)
admlogs(message)
	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`—Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
		user.adm = 0;
		user.ban = false;
		await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É [id${user.id}|${user.tag}] –∞–¥–º–∏–Ω–∫—É!`);
		vk.api.messages.send({ user_id: user.id, message: `üî• [id${user.id}|${user.tag}], –≤—ã —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.`});
	}
});

/*/ ADM /*/
function clearTemp()
{
	users.map(user => {
		user.energy = 10;
	});
}

clearTemp(); 

setInterval(async () => {
users.filter(x=> x.energy < 10).map(x=> {
x.energy += 1;
});
}, 180000);

async function admlogs(message, text) {
if(!message.chatId) vk.api.messages.send({ chat_id: 4, message: `[‚úâ –õ–û–ì–ò –ê–î–ú–ò–ù–û–í]
[${time()} |–í—Ä–µ–º—è: ${data()}]:
üí¨ –ù–∏–∫–Ω–µ–π–º: ${message.user.tag}
üí¨ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–∫: @id${message.user.id} (${message.user.tag})
üÜî –ò–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${message.user.id}
üÜî –ò–≥—Ä–æ–≤–æ–π ID: ${message.user.uid}
üìã –í–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${message.text}

üìã –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ –õ–° –ë–æ—Ç–∞` })

if(message.chatId )vk.api.messages.send({ chat_id: 4, message: `[‚úâ –õ–û–ì–ò –ê–î–ú–ò–ù–û–í]
[${time()} |–í—Ä–µ–º—è: ${data()}]:
üí¨ –ù–∏–∫–Ω–µ–π–º: ${message.user.tag}
üí¨ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–∫: @id${message.user.id} (${message.user.tag})
üÜî –ò–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${message.user.id}
üÜî –ò–≥—Ä–æ–≤–æ–π ID: ${message.user.uid}
üìã –í–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${message.text}

üìã –ò–∑ —á–∞—Ç–∞: ${message.chatId}` })
}

async function saveAll()
{
require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
require('fs').writeFileSync("./promo.json", JSON.stringify(promo, null, "\t"));
return true;
}

function time() { 
let date = new Date(); 
let days = date.getDate(); 
let hours = date.getHours(); 
let minutes = date.getMinutes(); 
let seconds = date.getSeconds(); 
if (hours < 10) hours = "0" + hours; 
if (minutes < 10) minutes = "0" + minutes; 
if (seconds < 10) seconds = "0" + seconds; 
var times = hours + ':' + minutes + ':' + seconds 
return times; 
}; 

function data() { 
var date = new Date(); 
let days = date.getDate(); 
let month = date.getMonth() + 1; 
let year = date.getFullYear(); 
if (month < 10) month = "0" + month; 
if (days < 10) days = "0" + days; 
var datas = days + '.' + month + '.' + year 
return datas; 
};	
const quests = [
	{ name: '–í—ã–∏–≥—Ä–∞–π—Ç–µ –≤ —Ç—Ä–µ–π–¥–µ 4 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥', reward: 50000, actions: 4 },
	{ name: '–£–≥–∞–¥–∞–π—Ç–µ —Å—Ç–∞–∫–∞–Ω—á–∏–∫ 3 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥', reward: 70000, actions: 3 },
	{ name: '–£–≥–∞–¥–∞–π—Ç–µ –∫—É–±–∏–∫ 2 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥', reward: 100000, actions: 2 },
	{ name: '–í—ã–∏–≥—Ä–∞–π—Ç–µ –≤ –∫–∞–∑–∏–Ω–æ 8 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', reward: 120000, actions: 8 },
	{ name: '–í—ã–∏–≥—Ä–∞–π—Ç–µ –≤ —Ä—É–ª–µ—Ç–∫–µ 10 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥', reward: 200000, actions: 10 }
]

const works = [
	{
		name: '–ì—Ä—É–∑—á–∏–∫',
		requiredLevel: 1,
		min: 10000,
		max: 10000,
		id: 1
	},
	{
		name: '–í–æ–¥–∏—Ç–µ–ª—å –∞–≤—Ç–æ–±—É—Å–∞',
		requiredLevel: 3,
		min: 20000,
		max: 20000,
		id: 2
	},
	{
		name: '–í–æ–¥–∏—Ç–µ–ª—å —Å–∫–æ—Ä–æ–π –ø–æ–º–æ—â–∏',
		requiredLevel: 5,
		min: 30000,
		max: 30000,
		id: 3
	},
	{
		name: '–ü–æ–º–æ—â–Ω–∏–∫ –º–∞—à–∏–Ω–∏—Å—Ç–∞',
		requiredLevel: 8,
		min: 40000,
		max: 40000,
		id: 4
	},
	{
		name: '–ú–∞—à–∏–Ω–∏—Å—Ç',
		requiredLevel: 10,
		min: 50000,
		max: 50000,
		id: 5
	}
];

const bicycles = [
	{
		id: 1,
		name: "ELOPS 520 BTWIN",
		cost: 20000,
		att: "photo-181133436_456239018"
	},
	{
		id: 2,
		name: "Stern Rocket 20",
		cost: 100000,
		att: "photo-181133436_456239019"
	},
	{
		id: 3,
		name: "ST520 27.5 ROCKRIDER",
		cost: 250000,
		att: "photo-181133436_456239020"
	},
	{
		id: 4,
	    name: "(BMX)Subrosa Tiro 20'",
		cost: 400000,
		att: "photo-181133436_456239021"
	},
	{
		id: 5,
		name: "(BMX) FORWARD Zigzag 1.0",
		cost: 500000,
		att: "photo-181133436_456239022"
	},
	{
		id: 6,
		name: "(BMX) Stark Gravity",
		cost: 600000,
		att: "photo-181133436_456239023"
	},
	{
		id: 7,
		name: "(BMX) Blitz Mini M1 10'",
		cost: 800000,
		att: "photo-181133436_456239024"
	}
];

const cars = [
	{
		id: 1,
		name: "Lada 2110",
		cost: 75000,
		att: "photo-160021944_456240473"
	},
	{
		id: 2,
		name: "Hyundai Solaris",
		cost: 250000,
		att: "photo-160021944_456240472"
	},
	{
		id: 3,
		name: "Toyota Camry",
		cost: 1000000,
		att: "photo-160021944_456240477"
	},
	{
		id: 4,
		name: "BMW 5",
		cost: 100000000,
		att: "photo-160021944_456240471"
	},
	{
		id: 5,
		name: "Mercedes - Benz",
		cost: 5000000000,
		att: "photo-160021944_456240475"
	},
	{
		id: 6,
		name: "Lamborghini Huracan",
		cost: 100000000000,
		att: "photo-160021944_456240474"
	},
	{
		id: 7,
		name: "Rolls Roys Wrath",
		cost: 50000000000000,
		att: "photo-160021944_456240476"
	}
];

const homes = [
	{
		name: '–ö–æ—Ä–æ–±–∫–∞ –∏–∑-–ø–æ–¥ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞',
		cost: 250,
		id: 1,
		att: "photo-178650735_456239085"
	},
	{
		name: '–ü–æ–¥–≤–∞–ª',
		cost: 3000,
		id: 2,
		att: "photo-178650735_456239086"

	},
	{
		name: '–ü–∞–ª–∞—Ç–∫–∞',
		cost: 3500,
		id: 3,
		att: "photo-178650735_456239087"
	},
	{
		name: '–î–æ–º–∏–∫ –Ω–∞ –¥–µ—Ä–µ–≤–µ',
		cost: 5000,
		id: 4,
		att: "photo-178650735_456239088"
	},
	{
		name: '–ü–æ–ª—É—Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –¥–æ–º',
		cost: 10000,
		id: 5,
		att: "photo-178650735_456239089"
	},
	{
		name: '–î–æ–º –≤ –ª–µ—Å—É',
		cost: 25000,
		id: 6,
		att: "photo-178650735_456239090"
	},
	{
		name: '–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –¥–æ–º',
		cost: 37500,
		id: 7,
		att: "photo-178650735_456239091"
	},
	{
		name: '–î–∞—á–∞',
		cost: 125000,
		id: 8,
		att: "photo-178650735_456239092"
	},
	{
		name: '–ö–∏—Ä–ø–∏—á–Ω—ã–π –¥–æ–º',
		cost: 80000,
		id: 9,
		att: "photo-178650735_456239093"
	},
	{
		name: '–ö–æ—Ç—Ç–µ–¥–∂',
		cost: 450000,
		id: 10,
		att: "photo-178650735_456239095"
	},
	{
		name: '–û—Å–æ–±–Ω—è–∫',
		cost: 1250000,
		id: 11,
		att: "photo-178650735_456239096"
	},
	{
		name: '–î–æ–º –Ω–∞ –†—É–±–ª—ë–≤–∫–µ',
		cost: 5000000,
		id: 12,
		att: "photo-178650735_456239097"
	},
	{
		name: '–õ–∏—á–Ω—ã–π –Ω–µ–±–æ—Å–∫—Ä—ë–±',
		cost: 7000000,
		id: 13,
		att: "photo-178650735_456239098"
	},
	{
		name: '–û—Å—Ç—Ä–æ–≤ —Å –æ—Å–æ–±–Ω—è–∫–æ–º',
		cost: 12500000,
		id: 14,
		att: "photo-178650735_456239099"
	},
	{
		name: '–ë–µ–ª—ã–π –¥–æ–º',
		cost: 20000000,
		id: 15,
		att: "photo-178650735_456239100"
	}
];

const pets = [
	{
		name: '–£—Ç–∫–∞',
		cost: 50000,
		id: 1,
		att: "photo-178650735_456239076"
	},
	{
		name: '–ü–µ—Ç—É—Ö',
		cost: 150000,
		id: 2,
		att: "photo-178650735_456239077"
	},
	{
		name: '–û–±–µ–∑—å—è–Ω–∞',
		cost: 300000,
		id: 3,
		att: "photo-178650735_456239078"
	},
	{
		name: '–ú—ã—Ä—Ç—ã—à–∫–∞',
		cost: 900000,
		id: 4,
		att: "photo-178650735_456239079"
	},
	{
		name: '–õ–æ—à–∞–¥—å',
		cost: 1500000,
		id: 5,
		att: "photo-178650735_456239081"
	},
	{
		name: '–°–ª–æ–Ω',
		cost: 2500000,
		id: 6,
		att: "photo-178650735_456239082"
	},
	{
		name: '–ì–µ–ø–∞—Ä–¥',
		cost: 30000000,
		id: 7,
		att: "photo-178650735_456239083"
	}
];

const petsupd = [
	{
		cost: 60000,
		id: 1
	},
	{
		cost: 1750000,
		id: 2
	},
	{
		cost: 310000,
		id: 3
	},
	{
		cost: 915000,
		id: 4
	},
	{
		cost: 1550000,
		id: 5
	},
	{
		cost: 2800000,
		id: 6
	},
	{
		cost: 40000000,
		id: 7
	}
];

const peka = [
	{
		name: 'TOPCOMP MG 5567830 GL503VD',
		cost: 32500,
		id: 1,
		att: "photo-178650735_456239136"
	},
	{
		name: 'COMPYOU GAME PC G777',
		cost: 74000,
		id: 2,
		att: "photo-178650735_456239137"
	},
	{
		name: 'RIWER GAME-GTX (G9-793)',
		cost: 96000,
		id: 3,
		att: "photo-178650735_456239138"
	},
	{
		name: 'ASUS ROG GR8II-T055Z',
		cost: 105000,
		id: 4,
		att: "photo-178650735_456239139"
	},
	{
		name: 'KEY GM PRO',
		cost: 117600,
		id: 5,
		att: "photo-178650735_456239140"
	},
	{
		name: 'MSI VORTEX G65VR 7RE',
		cost: 130000,
		id: 6,
		att: "photo-178650735_456239142"
	},
	{
		name: 'ARENA A085885',
		cost: 325000,
		id: 7,
		att: "photo-178650735_456239143"
	},
	{
		name: 'DELL XPS TOWER SPECIAL EDITION',
		cost: 486000,
		id: 8,
		att: "photo-178650735_456239144"
	},
	{
		name: 'APPLE IMAC –° –≠–ö–†–ê–ù–û–ú 5K RETINA',
		cost: 564000,
		id: 9,
		att: "photo-178650735_456239145"
	},
	{
		name: 'SURFACE STUDIO',
		cost: 835000,
		id: 10,
		att: "photo-178650735_456239146"
	}
];

const airplanes = [
	{
		name: '–ù–µ–±–æ–ª—å—à–æ–π –ø–ª–∞–Ω–µ—Ä',
		cost: 10000,
		id: 1,
		att: "photo-178650735_456239102"
	},
	{
		name: '–ü–∞—Ä–∞–ø–ª–∞–Ω',
		cost: 75000,
		id: 2,
		att: "photo-178650735_456239103"
	},
	{
		name: '–Ø–∫-40',
		cost: 400000,
		id: 3,
		att: "photo-178650735_456239104"
	},
	{
		name: '–í–∏–° 1',
		cost: 900000,
		id: 4,
		att: "photo-178650735_456239105"
	},
	{
		name: 'Tundra',
		cost: 1200000,
		id: 5,
		att: "photo-178650735_456239106"
	},
	{
		name: '–°–ê-20–ü',
		cost: 1750000,
		id: 6,
		att: "photo-178650735_456239107"
	},
	{
		name: '–õ-39',
		cost: 3000000,
		id: 7,
		att: "photo-178650735_456239109"
	},
	{
		name: 'Boeing 737-500',
		cost: 6000000,
		id: 8,
		att: "photo-178650735_456239110"
	},
	{
		name: 'Piper M350',
		cost: 15000000,
		id: 9,
		att: "photo-178650735_456239111"
	},
	{
		name: 'Beechcraft Baron 58P',
		cost: 25000000,
		id: 10,
		att: "photo-178650735_456239112"
	},
	{
		name: '–£–¢-2–ë',
		cost: 45000000,
		id: 11,
		att: "photo-178650735_456239113"
	},
	{
		name: 'Beechcraft 60 Duke',
		cost: 80000000,
		id: 12,
		att: "photo-178650735_456239114"
	},
	{
		name: '–¢–†-301–¢–í',
		cost: 150000000,
		id: 13,
		att: "photo-178650735_456239115"
	},
	{
		name: '–õ-410–£–í–ü',
		cost: 280000000,
		id: 14,
		att: "photo-178650735_456239116"
	},
	{
		name: 'C-17A Globemaster III',
		cost: 400000000,
		id: 15,
		att: "photo-178650735_456239117"
	},
	{
		name: 'Boeing 747SP',
		cost: 750000000,
		id: 16,
		att: "photo-178650735_456239118"
	},
	{
		name: 'Gulfstream IV',
		cost: 1000000000,
		id: 17,
		att: "photo-178650735_456239119"
	}
];

const phones = [
	{
		name: 'Nokia 105',
		cost: 1500,
		id: 1,
		att: "photo-178650735_456239121"
	},
	{
		name: 'Philips Xenium E168',
		cost: 4000,
		id: 2,
		att: "photo-178650735_456239122"
	},
	{
		name: 'Xiaomi Redmi 6A 2',
		cost: 6000,
		id: 3,
		att: "photo-178650735_456239123"
	},
	{
		name: 'Digma LINX ATOM 3G',
		cost: 9000,
		id: 4,
		att: "photo-178650735_456239124"
	},
	{
		name: 'Alcatel 1',
		cost: 12000,
		id: 5,
		att: "photo-178650735_456239125"
	},
	{
		name: 'Honor 9 Lite',
		cost: 20000,
		id: 6,
		att: "photo-178650735_456239126"
	},
	{
		name: 'Samsung Galaxy J6',
		cost: 36000,
		id: 7,
		att: "photo-178650735_456239127"
	},
	{
		name: 'IPhone 5',
		cost: 60000,
		id: 8,
		att: "photo-178650735_456239128"
	},
	{
		name: 'Xperia XZ Premium',
		cost: 100000,
		id: 9,
		att: "photo-178650735_456239129"
	},
	{
		name: 'Samsung Galaxy J8',
		cost: 300000,
		id: 10,
		att: "photo-178650735_456239130"
	},
	{
		name: 'IPhone X',
		cost: 1500000,
		id: 11,
		att: "photo-178650735_456239131"
	},
	{
		name: 'IPhone 3GS Supreme',
		cost: 5000000,
		id: 12,
		att: "photo-178650735_456239132"
	}
];

const businesses = [
	{
		name: '–ê–≤—Ç–æ–º–æ–π–∫–∞',
		cost: 5000,
		earn: 400,
		id: 1,
		icon: '1‚É£'
	},
	{
		name: '–†–æ—Å–ü–µ—á–∞—Ç—å',
		cost: 15000,
		earn: 700,
		id: 2,
		icon: '2‚É£'
	},
	{
		name: '–ú–∞–≥–∞–∑–∏–Ω',
		cost: 30000,
		earn: 2500,
		id: 3,
		icon: '3‚É£'
	},
	{
		name: '–°—É–ø–µ—Ä-–º–∞—Ä–∫–µ—Ç',
		cost: 45000,
		earn: 3800,
		id: 4,
		icon: '4‚É£'
	},
	{
		name: '–ö–æ–º–∞–Ω–¥–æ—Ä',
		cost: 60000,
		earn: 18000,
		id: 5,
		icon: '5‚É£'
	},
	{
		name: '–ê–ª–ª–µ—è',
		cost: 175000,
		earn: 70000,
		id: 6,
		icon: '6‚É£'
	},
	{
		name: '–°–ø–æ—Ä—Ç–º–∞—Å—Ç–µ—Ä',
		cost: 190000,
		earn: 120000,
		id: 7,
		icon: '7‚É£'
	}
];

setInterval(async () => {
	users.map(user => {
		for(var i = 0; i < user.business.length; i++)
		{
			const biz = businesses[user.business[i].id - 1][user.business[i].upgrade - 1];
			user.business[i].moneys += Math.floor(biz.earn / biz.workers * user.business[i].workers)
		}
	});
}, 3600000);

function progressQuest(user, id) {
	if ( !('quests' in user) )
		user.quests = quests.map(item => { return 0 })

	if ( user.quests[id] < quests[id].actions ) {
		if ( user.quests[id] + 1 == quests[id].actions ) {
			user.balance += quests[id].reward
			user.quests[id] = quests[id].actions
			vk.api.messages.send({
				peer_id: user.id,
				message: `[id${user.id}|${user.tag}], –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∫–≤–µ—Å—Ç! ‚ò∫
‚úÖ –ù–∞ –≤–∞—à —Å—á–µ—Ç –±—ã–ª–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ ${utils.sp(quests[id].reward)}$`
				});
		}
		else 
			user.quests[id]++
	}
}

function resetQuest(user, id) {
	if ( !('quests' in user) )
		user.quests = quests.map(item => { return 0 })

	if ( user.quests[id] < quests[id].actions )
		user.quests[id] = 0
}
	
resetAtMidnight()

function resetAtMidnight() {
	var now = new Date();
	var night = new Date(
		now.getFullYear(),
		now.getMonth(),
		now.getDate() + 1,
		0, 0, 0
);
var msToMidnight = night.getTime() - now.getTime();

setTimeout(function() {
	users.map(user => {
	user.quests = quests.map(item => { return 0 })
})
resetAtMidnight();
}, msToMidnight);
} 

setInterval(async () => {
	users.map(user => {
		if(user.business)
		{
			const biz = businesses.find(x=> x.id === user.business);
			if(!biz) return;

			user.biz += biz.earn;
		}
	});
}, 3600000);

const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, '–î–û–•–ï–†–ê');

		return e;
	},
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	}
}

